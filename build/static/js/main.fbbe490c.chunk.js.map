{"version":3,"sources":["components/footer.js","images/logo.png","components/connectWallet.jsx","components/navbar.jsx","api/Crypto.jsx","api/TradingOption.jsx","components/faqPage.jsx","images/icon/features-icon-1.png","images/icon/features-icon-2.png","images/icon/features-icon-3.png","images/benefits-6.png","components/features.jsx","components/holdingPeriodChart.jsx","components/holdingPeriodMessage.jsx","images/banner-bg-2.png","components/jumbotron.jsx","eosio/EosService.js","components/liquidityPool.jsx","api/Currency.jsx","components/selectCurrency.jsx","components/optionContracts.jsx","components/currencyBalance.jsx","components/tradeOption.jsx","components/pages/home.jsx","images/shape/color-bg-2.png","images/shape/color-bg.png","components/backgrounds.jsx","components/pages/holders.jsx","components/pieChart.jsx","components/pages/liquidity.jsx","components/pages/holders/trade.jsx","components/pages/holders/utilization.jsx","components/pages/tokenHolders.jsx","App.js","reportWebVitals.js","index.js"],"names":["pjson","require","Footer","props","className","version","ConnectWallet","isLoggedIn","Button","variant","onClick","onDisconnectWallet","wallet","onAttachWallet","navbar","to","homepage","src","logo","style","width","cryptoCurrencies","currency","marketPrice","utilizationRate","availabilityMin","availabilityMax","Crypto","getCryptoCurrencies","getCryptoCurrency","i","findIndex","crypto","setMarketPrice","price","getSettlementFee","optionSize","getPutPeriodFee","holdingPeriod","strikePrice","impliedVolRate","Math","sqrt","getCallPeriodFee","getStrikeFee","option","strikeRate","getTotalCost","console","log","periodFee","strikeFee","settlementFee","totalFee","TradingOptions","getCallOptionProfit","getPutOptionProfit","getBreakEven","abs","FaqPage","Accordion","defaultActiveKey","Card","bg","Toggle","as","Header","eventKey","class","Collapse","Body","Features","holder","alt","writer","getChartPos","breakEvenPrice","mp100","parseInt","sp100","be100","d100","round","HoldingPeriodChart","totalCost","propsMarketPrice","useSpring","y","from","propsBreakEvenPrice","propsStrikePrice","div","data-value","parseFloat","toFixed","process","REACT_APP_TEST_MARKET_PRICE","toLowerCase","HoldingPeriodMessage","divDescription","opacity","days","Jumbotron","banner","EosService","endpoint","contractName","table","req0","scope","rpc","JsonRpc","req","json","code","reverse","show_payer","Object","keys","forEach","key","get_table_rows","result","getTableRows","getNodeTableRows","currencySymbol","account","accountName","get_currency_balance","Promise","resolve","reject","getBalance","then","catch","err","action","dataValue","transferData","transferContract","actions","actor","ualActiveUser","localStorage","getItem","permission","requestPermission","push","name","authorization","data","signTransaction","blocksBehind","expireSeconds","privateKey","JsSignatureProvider","signatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","invokeAction","acc","setItem","removeItem","ual","activeUser","getEosTableRows","lower_bound","upper_bound","limit","rows","row","id","dai","price1_last","usdc","getOptionTableRows","getPoolTableRows","getLPTableRows","amount","strike","period","optiontype","feein","transferAmount","invokeOptionAction","quantity","memo","fee","optionCreate","optionid","profitsym","precision","optionExercise","minmint","invokePoolAction","maxburn","LiquidityPool","useState","setPoolStat","setAvailabilityMin","setAvailabilityMax","setUtilizationRate","useEffect","getPoolStat","poolStat","totalDeposit","totaldeposit","split","lockedAmount","lockedamount","rate","refresh","role","aria-valuenow","aria-valuemin","aria-valuemax","type","icon","Currency","getCurrency","setCurrency","selectedCurrency","filter","curr","SelectCurrency","show","setShow","handleClose","Modal","onHide","dialogClassName","backgroundColor","textAlign","padding","color","map","onSelectCurrency","image","height","OptionContracts","viewLimit","setKey","options","setOptions","optionError","setOptionError","load","optionList","handleError","Tabs","activeKey","onSelect","k","Tab","title","expired","Date","parse","expiration","now","priceTooLow","priceTooHigh","premium","status","optionExerciseCurr","option_id","error","exercise","colspan","toString","CurrencyBalance","balance","setBalance","TradeOption","state","tradeOption","cryptoCurrency","errors","components","holdingPeriodMessage","holdingPeriodChart","graphData","optionType","currentPrice","previousPos","newPos","schema","Joi","string","required","label","number","validate","abortEarly","details","item","path","message","setState","handleBuyError","buy","handleChange","input","currentTarget","currentState","value","updateState","handleSubmit","e","preventDefault","option_type","optionCreateCurr","refreshOptionList","refreshBalance","handleChangeCurrency","getMarketPrice","handleGraph","callback","getCurrencyBalance","this","getImpliedVolRate","currentCurrency","usdPrice","optionConfig","impliedvolrate","fldOption","fldOptionSize","fldMarketPrice","fldStrikePrice","fldImpliedVolRate","fldHoldingPeriod","TradingOption","mode","onChange","aria-label","checked","htmlFor","placeholder","Component","Home","Backgrounds","bannerBackground","midBackground","Holders","PieChart","liquidityData","Liquidity","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","setErrors","refreshPool","setRefreshPool","currentRate","setCurrentRate","handleDepositError","deposit","handleWithdrawError","withdraw","handleDeposit","validateDeposit","poolDeposit","handleWithdraw","validateWithdraw","poolWithdraw","readonly","hegeosStat","lockedpremium","supply","hegeosRate","Trade","utilization","min","max","TokenHolders","HegeosApp","attachWallet","showModal","disconnectWallet","logout","Fragment","exact","React","chains","chainId","rpcEndpoints","protocol","host","URL","port","UALWrapper","setChain","event","target","search","window","location","URLSearchParams","get","available","c","chain","anchor","Anchor","appName","authenticators","AppConsumer","withUAL","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbbe490c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst pjson = require('../../package.json');\r\n\r\nfunction Footer(props) {\r\n    return (\r\n      <footer className=\"footer-area\">\r\n        <div className=\"container\">\r\n          <p className=\"order-2 order-sm-1 pt-5\">v{pjson.version} Copyright © HEGEOS</p>\r\n        </div>\r\n      </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.3c9ecb7a.png\";","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Wallet from '../api/Wallets';\r\n\r\nfunction ConnectWallet(props) {\r\n    //const [show, setShow] = useState(false);\r\n\r\n    //const handleClose = () => setShow(false);\r\n    //const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            {!props.isLoggedIn() ? (\r\n                <Button variant={props.variant || 'primary'} onClick={props.onAttachWallet /* handleShow */}>\r\n                    Connect your wallet\r\n                </Button>\r\n            ) : (\r\n                <Button variant={props.variant || 'primary'} onClick={props.onDisconnectWallet}>\r\n                    Disconnect {props.wallet}\r\n                </Button>\r\n            )}\r\n            { /* (\r\n            <Modal show={show} onHide={handleClose} dialogClassName=\"w-25\">\r\n                <div className=\"text-dark\">\r\n                    <div className=\"row\">\r\n                        {Wallet.getWallet().map((wallet) => (\r\n                            <a\r\n                                className=\"btn btn-primary w-100 rounded-0 \"\r\n                                onClick={() => {\r\n                                    props.onAttachWallet(wallet);\r\n                                    handleClose();\r\n                                }}\r\n                            >\r\n                                <div className=\"text-center\">\r\n                                    <img\r\n                                        src={'/' + wallet.image}\r\n                                        alt={wallet.image}\r\n                                        className=\"w-25\"\r\n                                    />\r\n                                    <br />\r\n                                    <h3 className=\"pt-3\">{wallet.walletName}</h3>\r\n                                    {wallet.description}\r\n                                </div>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            ) */ }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConnectWallet;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../images/logo.png';\r\nimport ConnectWallet from './connectWallet';\r\n\r\nconst pjson = require('../../package.json');\r\n\r\nfunction navbar(props) {\r\n    return (\r\n        <header className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 \">\r\n            <Link\r\n                to={pjson.homepage+\"/\"}\r\n                className=\"d-flex align-items-center col-md-3 mb-2 mb-md-0 text-dark text-decoration-none\"\r\n            >\r\n                <img src={logo} style={{ width: '160px' }} />\r\n            </Link>\r\n\r\n            <ul className=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n                {props.wallet != false ? (\r\n                    <>\r\n                        <li>\r\n                            <NavLink to={pjson.homepage+\"/holders\"} className=\"nav-link px-2\">\r\n                                Holders\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to={pjson.homepage+\"/liquidity\"} className=\"nav-link px-2\">\r\n                                Writers\r\n                            </NavLink>\r\n                        </li>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <li>\r\n                            <NavLink to={pjson.homepage+\"/\"} className=\"nav-link px-2\">\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                    </>\r\n                )}\r\n                {/*(<li>\r\n                    <NavLink to={pjson.homepage+\"/faq\"} className=\"nav-link px-2\">\r\n                        How it works?\r\n                    </NavLink>\r\n                </li>)*/}\r\n            </ul>\r\n\r\n            <div className=\"col-md-3 text-end\">\r\n                <ConnectWallet\r\n                    isLoggedIn={props.isLoggedIn}\r\n                    onAttachWallet={props.onAttachWallet}\r\n                    onDisconnectWallet={props.onDisconnectWallet}\r\n                />\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default navbar;\r\n","/*\r\n    Example of the crypto currency supported on the trade\r\n    change this to the API\r\n*/\r\nlet cryptoCurrencies = [\r\n    {\r\n        currency: 'USDC',\r\n        marketPrice: 6.25999999999999979,\r\n        //strikeRate: 6.25999999999999979,\r\n        utilizationRate: 0,\r\n        availabilityMin: 0,\r\n        availabilityMax: 0,\r\n    },\r\n    {\r\n        currency: 'DAI',\r\n        marketPrice: 6.25999999999999979,\r\n        //strikeRate: 6.25999999999999979,\r\n        utilizationRate: 0,\r\n        availabilityMin: 0,\r\n        availabilityMax: 0,\r\n    },\r\n];\r\n\r\n/*\r\n    will just going to pull up the crypto currency supported on the API\r\n*/\r\nconst getCryptoCurrencies = () => {\r\n    return cryptoCurrencies;\r\n};\r\n\r\n/*\r\n    will get the exact crypto currency you want to trade on.\r\n*/\r\nconst getCryptoCurrency = (currency) => {\r\n    const i = cryptoCurrencies.findIndex(crypto => crypto.currency === currency);\r\n    return i !== -1 ? cryptoCurrencies[i] : null;\r\n};\r\n\r\nconst setMarketPrice = (currency, price) => {\r\n    const i = cryptoCurrencies.findIndex(crypto => crypto.currency === currency);\r\n    if (i !== -1) {\r\n        cryptoCurrencies[i].marketPrice = price;\r\n        //cryptoCurrencies[i].strikeRate = Number(price.toFixed(2));\r\n    }\r\n}\r\n\r\nconst Crypto = {\r\n    getCryptoCurrencies,\r\n    getCryptoCurrency,\r\n    setMarketPrice,\r\n};\r\n\r\nexport default Crypto;\r\n","const getCallOptionProfit = (marketPrice, strikePrice, optionSize) => {\r\n  return ((marketPrice - strikePrice) * optionSize) / marketPrice;\r\n};\r\n\r\nconst getPutOptionProfit = (marketPrice, strikePrice, optionSize) => {\r\n  return ((strikePrice - marketPrice) * optionSize) / marketPrice;\r\n};\r\n\r\nconst getSettlementFee = (optionSize) => {\r\n  return optionSize * 0.01;\r\n};\r\n\r\nconst getPutPeriodFee = (optionSize, holdingPeriod, strikePrice, impliedVolRate, marketPrice) => {\r\n  return (optionSize * Math.sqrt(holdingPeriod) * impliedVolRate * strikePrice) / marketPrice;\r\n};\r\n\r\nconst getCallPeriodFee = (optionSize, holdingPeriod, strikePrice, impliedVolRate, marketPrice) => {\r\n  return (optionSize * Math.sqrt(holdingPeriod) * impliedVolRate * marketPrice) / strikePrice;\r\n};\r\n\r\nconst getStrikeFee = (option, marketPrice, strikeRate, optionSize) => {\r\n  if (option === 'PUT' && strikeRate > marketPrice) {\r\n    return ((strikeRate - marketPrice) * optionSize) / marketPrice;\r\n  } else if (option === 'CALL' && strikeRate < marketPrice) {\r\n    return ((marketPrice - strikeRate) * optionSize) / marketPrice;\r\n  } else return 0;\r\n};\r\n\r\nconst getTotalCost = (\r\n  option,\r\n  optionSize,\r\n  marketPrice,\r\n  strikePrice,\r\n  //strikeRate,\r\n  impliedVolRate,\r\n  holdingPeriod,\r\n) => {\r\n  console.log('option:', option);\r\n  console.log('optionSize:', optionSize);\r\n  console.log('marketPrice:', marketPrice);\r\n  console.log('strikePrice:', strikePrice);\r\n  console.log('impliedVolRate:', impliedVolRate);\r\n  console.log('holdingPeriod:', holdingPeriod);\r\n  if (option === 'PUT') {\r\n    const periodFee = getPutPeriodFee(optionSize, holdingPeriod, strikePrice, impliedVolRate, marketPrice);\r\n    const strikeFee = getStrikeFee(option, marketPrice, strikePrice /* strikeRate */, optionSize);\r\n    const settlementFee = getSettlementFee(optionSize);\r\n    const totalFee = (periodFee + strikeFee + settlementFee) * 1.05 * marketPrice; // +5%\r\n    console.log('periodFee:', periodFee);\r\n    console.log('strikeFee:', strikeFee);\r\n    console.log('settlementFee:', settlementFee);\r\n    console.log('totalFee:', totalFee);\r\n    return totalFee;\r\n  } else if (option === 'CALL') {\r\n    const periodFee = getCallPeriodFee(optionSize, holdingPeriod, strikePrice, impliedVolRate, marketPrice);\r\n    const strikeFee = getStrikeFee(option, marketPrice, strikePrice /* strikeRate */, optionSize);\r\n    const settlementFee = getSettlementFee(optionSize);\r\n    const totalFee = (periodFee + strikeFee + settlementFee) * 1.05 * marketPrice; // +5%\r\n    console.log('periodFee:', periodFee);\r\n    console.log('strikeFee:', strikeFee);\r\n    console.log('settlementFee:', settlementFee);\r\n    console.log('totalFee:', totalFee);\r\n    return totalFee;\r\n  }\r\n};\r\n\r\nconst getBreakEven = (\r\n  option,\r\n  //optionSize,\r\n  marketPrice,\r\n  strikePrice,\r\n  //strikeRate,\r\n  impliedVolRate,\r\n  holdingPeriod,\r\n) => {\r\n  if (option === 'CALL') {\r\n    return Math.abs(\r\n      strikePrice +\r\n        getTotalCost(\r\n          option,\r\n          1, //optionSize,\r\n          marketPrice,\r\n          strikePrice,\r\n          //strikeRate,\r\n          impliedVolRate,\r\n          holdingPeriod,\r\n        ),\r\n    );\r\n  } else if (option === 'PUT') {\r\n    return Math.abs(\r\n      strikePrice -\r\n        getTotalCost(\r\n          option,\r\n          1, //optionSize,\r\n          marketPrice,\r\n          strikePrice,\r\n          //strikeRate,\r\n          impliedVolRate,\r\n          holdingPeriod,\r\n        ),\r\n    );\r\n  }\r\n};\r\n\r\nconst TradingOptions = {\r\n  getCallOptionProfit,\r\n  getPutOptionProfit,\r\n  getSettlementFee,\r\n  getCallPeriodFee,\r\n  getPutPeriodFee,\r\n  getTotalCost,\r\n  getBreakEven,\r\n};\r\n\r\nexport default TradingOptions;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nexport default function FaqPage(props) {\r\n    return (\r\n        <div className=\"faqPage boxStyle p-4\">\r\n            <h2>FREQUENTLY ASKED QUESTION</h2>\r\n            <hr />\r\n\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card bg=\"transparent\">\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                        <h4 class=\"text-light\">Ipsum elit ea non magna qui officia.</h4>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            Nostrud irure incididunt fugiat in adipisicing irure non incididunt\r\n                            excepteur anim laboris dolore. Nisi sit cillum irure laborum velit in\r\n                            qui pariatur duis nisi ut Lorem. Aliqua laboris Lorem incididunt\r\n                            exercitation tempor qui. Dolore sit excepteur aliqua eu velit anim\r\n                            fugiat eiusmod reprehenderit ea cillum deserunt commodo. Laboris laboris\r\n                            Lorem minim enim eiusmod excepteur. Cupidatat velit exercitation quis\r\n                            consequat. Adipisicing incididunt proident velit anim velit consequat\r\n                            aute aliquip Lorem do ipsum ut labore minim.\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                <Card bg=\"transparent\">\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                        <h4 class=\"text-light\">Enim est qui aliquip ea ex consequat dolore ut.</h4>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body>\r\n                            Sint quis magna cupidatat id non ut ex Lorem velit. Cillum minim minim\r\n                            mollit cillum quis nulla nostrud proident sit Lorem dolor eiusmod.\r\n                            Tempor nisi adipisicing proident irure eiusmod sint proident cupidatat\r\n                            nisi. Irure nulla commodo sunt eiusmod anim do laborum voluptate dolor.\r\n                            Sit ex Lorem exercitation adipisicing Lorem magna enim consequat qui.\r\n                            Consectetur nostrud in eiusmod excepteur exercitation quis veniam.\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/features-icon-1.cc7bd428.png\";","export default __webpack_public_path__ + \"static/media/features-icon-2.eed4b693.png\";","export default __webpack_public_path__ + \"static/media/features-icon-3.7b23baf9.png\";","export default __webpack_public_path__ + \"static/media/benefits-6.ad0d45d0.png\";","import React from 'react';\r\nimport holder from '../images/icon/features-icon-1.png';\r\nimport writer from '../images/icon/features-icon-2.png';\r\nimport tokenHolder from '../images/icon/features-icon-3.png';\r\nimport benefits from '../images/benefits-6.png';\r\n\r\nfunction Features(props) {\r\n    return (\r\n        <section className=\"hegeos-features-area\">\r\n            {/*(<hr />)*/}\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/*(<div className=\"col-lg-4\">)*/}\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"hegeos-features-item text-center mt-30\">\r\n                            <img src={holder} alt=\"icon\" />\r\n                            <h3 className=\"title\">HOLDERS</h3>\r\n                            <p>\r\n                                <b> Trade EOS call and put options.</b> <br />\r\n                                Non-custodial options with on-chain settlement. Choose any strike\r\n                                price, exercise at any moment.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    {/*(<div className=\"col-lg-4\">)*/}\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"hegeos-features-item text-center mt-30\">\r\n                            <img src={writer} alt=\"icon\" />\r\n                            <h3 className=\"title\">WRITERS</h3>\r\n                            <p>\r\n                                <b> Write EOS call and put options.</b> <br /> Provide liquidity and\r\n                                start earning yield on EOS. Auto diversiﬁcation of capital\r\n                                allocation.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    {/*(<div className=\"col-lg-4\">\r\n                        <div className=\"hegeos-features-item text-center mt-30 item-3\">\r\n                            <img src={tokenHolder} alt=\"icon\" />\r\n                            <h3 className=\"title\">TOKEN HOLDERS</h3>\r\n                            <p>\r\n                                <b> Earn protocol's fees in staking rewards</b> <br /> Receive\r\n                                liquidity mining & utilization rewards in HEGEOS.IO. Participate in\r\n                                staking and earn EOS.\r\n                            </p>\r\n                        </div>\r\n                    </div>)*/}\r\n                </div>\r\n            </div>\r\n\r\n            {/*(<div className=\"item-1\">\r\n                <hr />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"hegeos-trade-thumb\">\r\n                                <img src={benefits} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"hegeos-trade-content\">\r\n                                <h3 className=\"title\">Mauris fringilla mauris eget iaculis</h3>\r\n                                <p>\r\n                                    Nunc accumsan efficitur libero, vel commodo lorem. In eget\r\n                                    sodales urna. Nam quis condimentum magna. Nulla aliquam, urna ut\r\n                                    volutpat viverra, sapien odio ornare arcu, sit amet imperdiet\r\n                                    ipsum sem non tellus. Mauris dictum condimentum arcu, sed\r\n                                    finibus ante dapibus sed. Fusce dictum maximus mi, dapibus\r\n                                    sagittis ipsum imperdiet quis. Etiam vitae neque finibus,\r\n                                    ultricies est et, dictum diam. Cras molestie, nunc eu blandit\r\n                                    dignissim, felis urna commodo nisl, sit amet auctor urna mauris\r\n                                    nec tellus. Nullam sodales leo id odio gravida, vitae ultrices\r\n                                    ligula consequat. Vivamus rhoncus pharetra pharetra. In molestie\r\n                                    elit in consequat egestas.{' '}\r\n                                </p>\r\n                                <p>\r\n                                    Nunc nec lectus luctus ex eleifend aliquet. Donec nibh neque,\r\n                                    placerat ac libero eget, varius consectetur sapien. Fusce eget\r\n                                    eros ornare lorem ornare aliquet.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>)*/}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Features;\r\n","import React from 'react';\r\n\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst getChartPos = (option, marketPrice, strikePrice, breakEvenPrice) => {\r\n    let posValue = 50;\r\n    const mp100 = parseInt(marketPrice * 100);\r\n    const sp100 = parseInt(strikePrice * 100);\r\n    const be100 = parseInt(breakEvenPrice * 100);\r\n    const d100 = Math.abs(be100-sp100);\r\n    console.log('mp100:', mp100, ', sp100:', sp100, ', be100:', be100, ', d:', d100);    \r\n    if (option === 'CALL') {\r\n        if (mp100 >= be100+d100) {\r\n            posValue = 0;\r\n        }\r\n        else if (mp100 >= be100) { // && (mp100 < be100+d100) => d100 > 0\r\n            posValue = 32 - Math.round((mp100-be100) * 32 / d100);\r\n        }\r\n        else if (mp100 <= sp100-d100) {\r\n            posValue = 96;\r\n        }\r\n        else if (mp100 <= sp100) { // && (mp100 > sp100-d100) => d100 > 0\r\n            posValue = 64 + Math.round((sp100-mp100) * 32 / d100);\r\n        }\r\n        else { // (mp100 < be100) && (mp100 > sp100) => d100 > 0\r\n            posValue = 64 - Math.round((mp100-sp100) * 32 / d100);\r\n        }\r\n    }\r\n    else if (option === 'PUT') {\r\n        if (mp100 >= sp100+d100) {\r\n            posValue = 0;\r\n        }\r\n        else if (mp100 >= sp100) { // && (mp100 < sp100+d100) => d100 > 0\r\n            posValue = 32 - Math.round((mp100-sp100) * 32 / d100);\r\n        }\r\n        else if (mp100 <= be100-d100) {\r\n            posValue = 96;\r\n        }\r\n        else if (mp100 <= be100) { // && (mp100 > be100-d100) => d100 > 0\r\n            posValue = 64 + Math.round((be100-mp100) * 32 / d100);\r\n        }\r\n        else { // (mp100 < sp100) && (mp100 > be100) => d100 > 0\r\n            posValue = 64 - Math.round((mp100-be100) * 32 / d100);\r\n        }\r\n    } else {\r\n        posValue = 48;\r\n    }\r\n    return posValue * 2.8;\r\n};\r\n\r\nexport default function HoldingPeriodChart({ option, strikePrice, breakEvenPrice, marketPrice, totalCost }) {\r\n    const propsMarketPrice = useSpring({\r\n        to: { y: getChartPos(option, marketPrice, strikePrice, breakEvenPrice) },\r\n        from: { y: 0 },\r\n    });\r\n\r\n    const propsBreakEvenPrice = useSpring({\r\n        to: { y: option === 'CALL' ? -91 : 0 },\r\n        from: { y: 0 },\r\n    });\r\n    const propsStrikePrice = useSpring({\r\n        to: { y: option === 'CALL' ? 91 : 0 },\r\n        from: { y: 0 },\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"optionChart\">\r\n                    <animated.div\r\n                        className=\"chartPriceDisplay chartOptionCurrent\"\r\n                        style={propsMarketPrice}\r\n                        data-value={'Current $' + parseFloat(marketPrice).toFixed(2) + (process.env.REACT_APP_TEST_MARKET_PRICE ? ' (test)' : '')}\r\n                    ></animated.div>\r\n                    <animated.div\r\n                        style={propsBreakEvenPrice}\r\n                        className=\"chartPriceDisplay chartOptionBreakEven\"\r\n                        data-value={'Break Even $' + parseFloat(breakEvenPrice).toFixed(2)}\r\n                    ></animated.div>\r\n                    <animated.div\r\n                        style={propsStrikePrice}\r\n                        className=\"chartPriceDisplay chartOptionStrikePrice\"\r\n                        data-value={'Strike Price $' + parseFloat(strikePrice).toFixed(2)}\r\n                    ></animated.div>\r\n                    <div className={option.toLowerCase() + 'OptionHeader'}>\r\n                        <div className=\"chartGridLine\"></div>\r\n                        <div className=\"chartGridLine\"></div>\r\n                        <div className={option.toLowerCase() + 'TopLine chartGridLine'}></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={option.toLowerCase() + 'Line chartGridLine'}></div>\r\n                        <div className=\"chartGridLine\"></div>\r\n                        <div className=\"chartGridLine\"></div>\r\n                    </div>\r\n                    <div className={option.toLowerCase() + 'OptionFooter'}>\r\n                        <div className={option.toLowerCase() + 'BotLine chartGridLine'}></div>\r\n                        <div className=\"chartGridLine\"></div>\r\n                        <div className=\"chartGridLine\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"callout callout-strike\">\r\n                    <span>Strike Price</span>\r\n                    <h3>${parseFloat(strikePrice).toFixed(2)}</h3>\r\n                </div>\r\n                <div className=\"callout callout-total\">\r\n                    <span>Total Cost</span>\r\n                    <h3>${parseFloat(totalCost).toFixed(2)}</h3>\r\n                </div>\r\n                <div className=\"callout callout-even\">\r\n                    <span>Break-even</span>\r\n                    <h3>${parseFloat(breakEvenPrice).toFixed(2)}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nexport default function HoldingPeriodMessage({ option, holdingPeriod, strikePrice, breakEvenPrice }) {\r\n    const divDescription = useSpring({ to: { opacity: 1 }, from: { opacity: 0 } });\r\n\r\n    let days = [];\r\n    days[1] = '1 day';\r\n    days[7] = '7 days (1 week)';\r\n    days[14] = '14 days (2 weeks)';\r\n    days[21] = '21 days (3 weeks)';\r\n    days[28] = '28 days (4 weeks)';\r\n\r\n    if (option === 'PUT') {\r\n        return (\r\n            <animated.div style={divDescription}>\r\n                <div>\r\n                    <p>\r\n                        If the price of underlying asset will rise higher than {breakEvenPrice} during \r\n                        the next {days[holdingPeriod]} your option will expire worthless. If the \r\n                        price of underlying asset will fall down lower than {breakEvenPrice} during the \r\n                        next {days[holdingPeriod]} you will be able to exercise your option and take profits.\r\n                    </p>\r\n                </div>\r\n            </animated.div>\r\n        );\r\n    } else if (option === 'CALL') {\r\n        return (\r\n            <animated.div style={divDescription}>\r\n                <div>\r\n                    <p>\r\n                        If the price of underlying asset will fall down lower than {breakEvenPrice} during \r\n                        the next {days[holdingPeriod]} your option will expire worthless. If the \r\n                        price of underlying asset will rise higher than {breakEvenPrice} during the \r\n                        next {days[holdingPeriod]} you will be able to exercise your option and take profits.\r\n                    </p>\r\n                </div>\r\n            </animated.div>\r\n        );\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/banner-bg-2.56ef8517.png\";","import React from 'react';\r\nimport banner from '../images/banner-bg-2.png';\r\nimport ConnectWallet from './connectWallet';\r\n\r\nexport default function Jumbotron(props) {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center pt-5\">\r\n                    {' '}\r\n                    <h2 className=\"display-5 text-center pt-5\">\r\n                        <strong>THE SIMPLEST OPTIONS TRADING EXPERIENCE</strong>\r\n                    </h2>\r\n                    <p className=\"lead text-center\">\r\n                        Trade non-custodial options for profits or to hedge your positions. Enjoy\r\n                        fixed price and unlimited upside of the options contracts. No registration,\r\n                        KYC or email required.\r\n                    </p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>Get Started now and connect your wallet.</p>\r\n                    <p className=\"lead\">\r\n                        <ConnectWallet\r\n                            variant=\"danger\"\r\n                            isLoggedIn={props.isLoggedIn}\r\n                            onAttachWallet={props.onAttachWallet}\r\n                            onDisconnectWallet={props.onDisconnectWallet}\r\n                        />\r\n                    </p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <img src={banner} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Api, JsonRpc } from 'eosjs';\r\n\r\nclass EosService {\r\n\r\n    static ualActiveUser;\r\n\r\n    static async getTableRows(endpoint, contractName, table, req0, scope) {\r\n        const rpc = new JsonRpc(endpoint);\r\n        try {\r\n            let req = {\r\n                json: true,\r\n                code: contractName,\r\n                scope: scope || contractName,\r\n                table,\r\n                reverse: false,\r\n                show_payer: false, \r\n            }\r\n            if (typeof req0 === 'object' && req0 !== null) {\r\n                Object.keys(req0).forEach((key) => {\r\n                    req[key] = req0[key];\r\n                });\r\n            }\r\n            const result = await rpc.get_table_rows(req);\r\n            return result;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getNodeTableRows(contractName, table, req0, scope) {\r\n        return EosService.getTableRows(process.env.REACT_APP_NODE_ENDPOINT, contractName, table, req0, scope);\r\n    }\r\n\r\n    static async getEosTableRows(contractName, table, req0, scope) {\r\n        return EosService.getTableRows(process.env.REACT_APP_EOS_ENDPOINT, contractName, table, req0, scope);\r\n    }\r\n\r\n    static async getPoolTableRows(table, req0, scope) {\r\n        return EosService.getNodeTableRows(process.env.REACT_APP_POOL_CONTRACT_NAME, table, req0, scope);\r\n    }\r\n\r\n    static async getOptionTableRows(table, req0, scope) {\r\n        return EosService.getNodeTableRows(process.env.REACT_APP_OPTION_CONTRACT_NAME, table, req0, scope);\r\n    }\r\n\r\n    static async getLPTableRows(table, req0, scope) {\r\n        return EosService.getNodeTableRows(process.env.REACT_APP_LP_CONTRACT_NAME, table, req0, scope);\r\n    }\r\n\r\n    static async getBalance(endpoint, contractName, currencySymbol) {\r\n        const account = EosService.accountName();\r\n        //console.log('accountName:', account);\r\n        if (!account) {\r\n            return ['0 ' + currencySymbol];\r\n        }\r\n        const rpc = new JsonRpc(endpoint);\r\n        try {\r\n            const result = await rpc.get_currency_balance(contractName, account, currencySymbol);\r\n            return result;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getCurrencyBalance(currency) {\r\n        return new Promise((resolve, reject) => {\r\n            //console.log('endpoint:', process.env.REACT_APP_NODE_ENDPOINT);\r\n            //console.log('contract:', process.env.REACT_APP_LP_CONTRACT_NAME);\r\n            //console.log('currency:', currency);\r\n            EosService.getBalance(\r\n                process.env.REACT_APP_NODE_ENDPOINT, \r\n                process.env.REACT_APP_LP_CONTRACT_NAME,\r\n                currency\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static async getUSDCBalance() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getBalance(\r\n                process.env.REACT_APP_NODE_ENDPOINT, \r\n                process.env.REACT_APP_LP_CONTRACT_NAME,\r\n                'USDC'\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static async getDAIBalance() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getBalance(\r\n                process.env.REACT_APP_NODE_ENDPOINT, \r\n                process.env.REACT_APP_LP_CONTRACT_NAME,\r\n                'DAI'\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static async invokeAction(action, contractName, dataValue, transferData, transferContract) {\r\n        const rpc = new JsonRpc(process.env.REACT_APP_NODE_ENDPOINT);\r\n        let actions = [];\r\n        const actor = EosService.ualActiveUser ? EosService.ualActiveUser.accountName : localStorage.getItem('name_account');\r\n        const permission = EosService.ualActiveUser ? EosService.ualActiveUser.requestPermission : localStorage.getItem('account_permission');\r\n        if (transferData) {\r\n            //console.log('transderData:', transferData);\r\n            actions.push({\r\n                account: (transferContract || 'eosio.token'),\r\n                name: 'transfer',\r\n                authorization: [{actor, permission}],\r\n                data: transferData\r\n            });\r\n        }\r\n        actions.push({\r\n            account: contractName,\r\n            name: action,\r\n            authorization: [{actor, permission}],\r\n            data: dataValue\r\n        });\r\n        console.log('actions:', actions);\r\n        if (EosService.ualActiveUser) {\r\n            try {\r\n                const result = await EosService.ualActiveUser.signTransaction(\r\n                    {\r\n                        actions\r\n                    },\r\n                    {\r\n                        blocksBehind: 3,\r\n                        expireSeconds: 30\r\n                    }\r\n                );\r\n                return result;\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        }\r\n        const privateKey = localStorage.getItem('private_key');\r\n        const { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig'); // development only\r\n        //console.log('privateKey:', privateKey);\r\n        const signatureProvider = new JsSignatureProvider([privateKey]);\r\n        const api = new Api({\r\n            rpc,\r\n            signatureProvider,\r\n            textDecoder: new TextDecoder(),\r\n            textEncoder: new TextEncoder()\r\n        });\r\n        //console.log('dataValue:', dataValue);\r\n        try {\r\n            const result = await api.transact(\r\n                {\r\n                    actions\r\n                },\r\n                {\r\n                    blocksBehind: 3,\r\n                    expireSeconds: 30\r\n                }\r\n            );\r\n            return result;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async invokePoolAction(action, dataValue, transferData, transferContract) {\r\n        return EosService.invokeAction(action, process.env.REACT_APP_POOL_CONTRACT_NAME, dataValue, transferData, transferContract);\r\n    }\r\n\r\n    static async invokeOptionAction(action, dataValue, transferData, transferContract) {\r\n        return EosService.invokeAction(action, process.env.REACT_APP_OPTION_CONTRACT_NAME, dataValue, transferData, transferContract);\r\n    }\r\n\r\n    static login(acc, key, permission) {\r\n        return new Promise((resolve, reject) => {\r\n            localStorage.setItem('name_account', acc);\r\n            localStorage.setItem('private_key', key);\r\n            localStorage.setItem('account_permission', permission);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    static logout() {\r\n        return new Promise((resolve, reject) => {\r\n            localStorage.removeItem('name_account');\r\n            localStorage.removeItem('private_key');\r\n            localStorage.removeItem('account_permission');\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    static isLoggedIn(props) {\r\n        EosService.ualActiveUser = props && props.ual && props.ual.activeUser;\r\n        return EosService.ualActiveUser || (\r\n            localStorage.getItem('name_account') && \r\n            localStorage.getItem('private_key') && \r\n            localStorage.getItem('account_permission')\r\n        );\r\n    }\r\n\r\n    static accountName() {\r\n        if (EosService.ualActiveUser) {\r\n            //console.log('EosService.ualActiveUser:', EosService.ualActiveUser);\r\n            return EosService.ualActiveUser.accountName;\r\n        }\r\n        return localStorage.getItem('name_account');\r\n    }\r\n\r\n    static accountPermission() {\r\n        if (EosService.ualActiveUser) {\r\n            return EosService.ualActiveUser.requestPermission;\r\n        }\r\n        return localStorage.getItem('account_permission');\r\n    }\r\n\r\n    static usdPrice() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getEosTableRows(\r\n                'swap.defi',\r\n                'pairs',\r\n                {\r\n                    lower_bound: 1239,\r\n                    upper_bound: 1255,\r\n                    limit: 20\r\n                }\r\n            )\r\n            .then(result => {\r\n                let price = {};\r\n                result.rows.forEach(row => {\r\n                    //console.log('row:', row);\r\n                    if (row.id === 1239) {\r\n                        price.dai = parseFloat(row.price1_last);\r\n                    }\r\n                    if (row.id === 1255) {\r\n                        price.usdc = parseFloat(row.price1_last);\r\n                    }\r\n                });\r\n                resolve(price);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static optionConfig() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getOptionTableRows(\r\n                process.env.REACT_APP_OPTION_CONFIG_TABLE,\r\n                {\r\n                    limit: 1\r\n                }\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });  \r\n        });\r\n    }\r\n\r\n    static optionList(limit) {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getOptionTableRows(\r\n                'options',\r\n                {\r\n                    reverse: true,\r\n                    limit: (limit || 100)\r\n                }\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static poolStat() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getPoolTableRows(\r\n                'tokenstat1',\r\n                {\r\n                    limit: 1\r\n                }\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });             \r\n        });\r\n    }\r\n\r\n    static hegeosStat() {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.getLPTableRows(\r\n                'stat',\r\n                {\r\n                    limit: 1\r\n                },\r\n                process.env.REACT_APP_HEGEOS_SYMBOL\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });             \r\n        });\r\n    }\r\n\r\n    static optionCreate(amount, strike, period, optiontype, feein, transferAmount) {\r\n        return new Promise((resolve, reject) => {\r\n            const account = EosService.accountName();\r\n            EosService.invokeOptionAction(\r\n                'create',\r\n                {\r\n                    account,\r\n                    amount,\r\n                    strike,\r\n                    period,\r\n                    optiontype,\r\n                    feein\r\n                },\r\n                {\r\n                    from: account,\r\n                    to: process.env.REACT_APP_OPTION_CONTRACT_NAME,\r\n                    quantity: transferAmount,\r\n                    memo: ''\r\n                },\r\n                process.env.REACT_APP_LP_CONTRACT_NAME\r\n            )\r\n            .then(result => {\r\n                console.log('result:', result);\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static optionCreateCurr(amount, strike, period, optiontype, currency, fee) {\r\n        //let a = amount.split(' ');\r\n        //const transferAmount = parseFloat(a[0]) * marketPrice; // ???\r\n        //console.log('amount:', amount, 'marketPrice:', marketPrice, 'transferAmount:', transferAmount);\r\n        console.log('fee:', fee);\r\n        return EosService.optionCreate(amount, strike, period, optiontype, \r\n            '6,'+currency, fee.toFixed(6)+' '+currency);\r\n    }\r\n\r\n    static optionCreateUSDC(amount, strike, period, optiontype, fee) {\r\n        //let a = amount.split(' ');\r\n        //const transferAmount = parseFloat(a[0]) * marketPrice; // ???\r\n        return EosService.optionCreate(amount, strike, period, optiontype, \r\n            '6,USDC', fee.toFixed(6)+' USDC');\r\n    }\r\n\r\n    static optionCreateDAI(amount, strike, period, optiontype, fee) {\r\n        //let a = amount.split(' ');\r\n        //const transferAmount = parseFloat(a[0]) * marketPrice; // ???\r\n        return EosService.optionCreate(amount, strike, period, optiontype, \r\n            '6,DAI', fee.toFixed(6)+' DAI');\r\n    }\r\n\r\n    static optionExercise(optionid, profitsym) {\r\n        return new Promise((resolve, reject) => {\r\n            EosService.invokeOptionAction(\r\n                'exercise',\r\n                {\r\n                    optionid,\r\n                    profitsym\r\n                }\r\n            )\r\n            .then(result => {\r\n                //console.log('result:', result);\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static optionExerciseCurr(optionid, currency) {\r\n        const precision = currency === 'EOS' ? '4' : '6';\r\n        return EosService.optionExercise(optionid, precision+','+currency);\r\n    }\r\n\r\n    static optionExerciseUSDC(optionid) {\r\n        return EosService.optionExercise(optionid, '6,USDC');\r\n    }\r\n\r\n    static optionExerciseDAI(optionid) {\r\n        return EosService.optionExercise(optionid, '6,DAI');\r\n    }\r\n\r\n    static optionExerciseEOS(optionid) {\r\n        return EosService.optionExercise(optionid, '4,DAI');\r\n    }\r\n\r\n    static poolDeposit(amount, minmint) {\r\n        return new Promise((resolve, reject) => {\r\n            const account = EosService.accountName();\r\n            EosService.invokePoolAction(\r\n                'addliquidity', \r\n                {\r\n                    account,\r\n                    amount, \r\n                    minmint\r\n                },\r\n                {\r\n                    from: account,\r\n                    to: process.env.REACT_APP_POOL_CONTRACT_NAME,\r\n                    quantity: amount,\r\n                    memo: ''\r\n                }                \r\n            ) // !!!\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    static poolWithdraw(amount, maxburn) {\r\n        return new Promise((resolve, reject) => {\r\n            const account = EosService.accountName();\r\n            EosService.invokePoolAction(\r\n                'withdraw',\r\n                {\r\n                    account,\r\n                    amount,\r\n                    maxburn\r\n                },\r\n                {\r\n                    from: account,\r\n                    to: process.env.REACT_APP_POOL_CONTRACT_NAME,\r\n                    quantity: maxburn,\r\n                    memo: ''\r\n                },\r\n                process.env.REACT_APP_LP_CONTRACT_NAME\r\n            )\r\n            .then(result => {\r\n                resolve(result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default EosService;","import React, { useState, useEffect } from 'react';\r\n\r\nimport EosService from '../eosio/EosService';\r\n\r\nexport default function LiquidityPool(props) {\r\n\r\n    const [poolStat, setPoolStat] = useState(null);\r\n    const [availabilityMin, setAvailabilityMin] = useState(0);\r\n    const [availabilityMax, setAvailabilityMax] = useState(0);\r\n    const [utilizationRate, setUtilizationRate] = useState(0); \r\n\r\n    const load = () => {\r\n        props.getPoolStat(poolStat => {\r\n            const totalDeposit = poolStat && parseFloat(poolStat.totaldeposit.split(' ')[0]);\r\n            const lockedAmount = poolStat && parseFloat(poolStat.lockedamount.split(' ')[0]);\r\n            const rate = totalDeposit && (lockedAmount * 100 / totalDeposit).toFixed(2);\r\n            setPoolStat(poolStat);\r\n            setAvailabilityMin(lockedAmount);\r\n            setAvailabilityMax(totalDeposit);\r\n            setUtilizationRate(rate);\r\n        });        \r\n    }\r\n\r\n    useEffect(() => {\r\n        load();\r\n        return () => {}; \r\n    }, [props.refresh]);\r\n\r\n    return (\r\n        <div className=\"liquidityPool boxStyle  p-4\">\r\n            <h2>LIQUIDITY POOL</h2>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    Utilization Rate :<br />\r\n                    <h3>{utilizationRate + '%'}</h3>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    Available Liquidity :<br />\r\n                    <h3>{availabilityMin + ' EOS / ' + availabilityMax + ' EOS'}</h3>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"progress\">\r\n                        <div\r\n                            className=\"progress-bar bg-primary\"\r\n                            role=\"progressbar\"\r\n                            style={{ width: utilizationRate + '%' }}\r\n                            aria-valuenow={utilizationRate}\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","const currency = [\r\n    {\r\n        type: 'DAI',\r\n        icon: 'images/currency/dai.svg',\r\n    },\r\n    {\r\n        type: 'EOS',\r\n        icon: 'images/currency/eos.svg',\r\n    },\r\n    {\r\n        type: 'USDC',\r\n        icon: 'images/currency/usdc.svg',\r\n    },\r\n];\r\n\r\nconst getCurrency = () => {\r\n    return currency;\r\n};\r\n\r\nconst setCurrency = (type) => {\r\n    const selectedCurrency = currency.filter((curr) => curr.type === type);\r\n    console.log('Currency function can be set here');\r\n    return selectedCurrency[0] ? selectedCurrency[0] : null;\r\n};\r\n\r\nconst Currency = {\r\n    getCurrency,\r\n    setCurrency,\r\n};\r\n\r\nexport default Currency;\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Currency from '../api/Currency';\r\n\r\nconst pjson = require('../../package.json');\r\n\r\nfunction SelectCurrency(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button variant={props.variant || 'primary'} onClick={handleShow}>\r\n                Exercise\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} dialogClassName=\"w-100\">\r\n                <div\r\n                    className=\"text-dark\"\r\n                    style={{ backgroundColor: '#074c61', textAlign: 'center', padding: '20px', color: '#fff' }}\r\n                >\r\n                    <h2 style={{ color: '#92cfbb' }}>HOW DO YOU WANT TO RECEIVE YOUR PROFIT?</h2>\r\n                    <div>\r\n                        {Currency.getCurrency().map((currency) => (\r\n                            <a\r\n                                className=\"btn btn-primary w-25 rounded-0 \"\r\n                                onClick={() => {\r\n                                    props.onSelectCurrency(currency);\r\n                                    handleClose();\r\n                                }}\r\n                            >\r\n                                <div className=\"text-center\">\r\n                                    <img\r\n                                        src={pjson.homepage + '/' + currency.icon}\r\n                                        alt={currency.image}\r\n                                        className=\"w-25\"\r\n                                        style={{ height: '100px' }}\r\n                                    />\r\n                                    <br />\r\n                                    <h3 className=\"pt-3\">{currency.type}</h3>\r\n                                </div>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectCurrency;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n//import Contracts from '../api/Contracts';\r\nimport SelectCurrency from './selectCurrency';\r\n\r\nimport EosService from '../eosio/EosService';\r\n\r\nfunction OptionContracts(props) {\r\n    const [viewLimit, setViewLimit] = useState(1000);\r\n    const [key, setKey] = useState('active');\r\n    const [options, setOptions] = useState([]);\r\n    const [optionError, setOptionError] = useState({});\r\n\r\n    const load = () => {\r\n        setOptionError({});\r\n        EosService.optionList(viewLimit)\r\n            .then(result => {\r\n                if (result.rows) {\r\n                    setOptions(result.rows);\r\n                }\r\n                setOptionError({});\r\n            },\r\n            props.handleError);\r\n    }\r\n\r\n    const exercise = (optionid, currency) => {\r\n        //console.log('exercise optionid=', optionid, ' currency=', currency);\r\n        EosService.optionExerciseCurr(optionid, currency)\r\n            .then(result => {\r\n                load();\r\n            },\r\n            (err) => setOptionError({\r\n                option_id: optionid, \r\n                error: err\r\n            }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        load();\r\n        return () => {};\r\n    }, [props.refresh]);\r\n\r\n    return (\r\n        <div className=\"liquidityPool boxStyle  p-4\">\r\n            <h2>YOUR OPTIONS CONTRACTS</h2>\r\n            <hr />\r\n            <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={(k) => setKey(k)}>\r\n                <Tab eventKey=\"active\" title=\"Active\">\r\n                    <table className=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Strike</th>\r\n                                <th scope=\"col\">Amount</th>\r\n                                <th scope=\"col\">Premium</th>\r\n                                <th scope=\"col\">Expiration</th>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {options.filter(option => {\r\n                                return option.account === EosService.accountName() // && option.status === 'active'\r\n                            }).map(option => {\r\n                                //console.log('option:', option);\r\n                                const expiration = Date.parse(option.expiration);\r\n                                //console.log('expiration:', expiration, 'now:', Date.now());\r\n                                const expired = expiration <= Date.now();                                \r\n                                const strikePrice = parseFloat(option.strike);\r\n                                //console.log('strikePrice:', strikePrice);\r\n                                //console.log('marketPrice:', props.marketPrice);\r\n                                const priceTooLow = (option.optiontype === 0) && (props.marketPrice < strikePrice);\r\n                                const priceTooHigh = (option.optiontype === 1) && (props.marketPrice > strikePrice);\r\n                                let rows = [\r\n                                    <tr>\r\n                                        <td>{option.id}</td>\r\n                                        <td>{parseFloat(option.strike).toFixed(4)}</td>\r\n                                        <td>{option.amount}</td>\r\n                                        <td>{option.premium}</td>\r\n                                        <td>{option.expiration}</td>\r\n                                        <td>{option.optiontype == '1' ? 'PUT' : 'CALL'}</td>\r\n                                        <td>\r\n                                            {option.status === 'active' && !expired && !priceTooLow && !priceTooHigh && (\r\n                                                <SelectCurrency onSelectCurrency={({ type: currency }) => exercise(option.id, currency)} />\r\n                                            )}\r\n                                            {option.status === 'active' && expired && 'Expired'}\r\n                                            {option.status === 'active' && !expired && priceTooLow && 'Price too low'}\r\n                                            {option.status === 'active' && !expired && priceTooHigh && 'Price too high'}\r\n                                            {option.status !== 'active' && option.status}\r\n                                        </td>\r\n                                    </tr>\r\n                                ]; \r\n                                if (optionError.error && optionError.option_id === option.id) {\r\n                                    rows.push(\r\n                                        <tr>\r\n                                            <td colspan=\"7\"><div className=\"alert alert-danger\">{optionError.error.toString()}</div></td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                                return rows;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </Tab>\r\n                {/*(<Tab eventKey=\"history\" title=\"History\">\r\n                    <table className=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Strike</th>\r\n                                <th scope=\"col\">Amount</th>\r\n                                <th scope=\"col\">Premium</th>\r\n                                <th scope=\"col\">Expiration</th>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {options.filter(option => {\r\n                                return option.account === EosService.accountName() && option.status !== 'active'\r\n                            }).map(option => {\r\n                                return (<tr>\r\n                                        <td>{option.id}</td>\r\n                                        <td>{parseFloat(option.strike).toFixed(4)}</td>\r\n                                        <td>{option.amount}</td>\r\n                                        <td>{option.premium}</td>\r\n                                        <td>{option.expiration}</td>\r\n                                        <td>{option.optiontype}</td>\r\n                                        <td></td>\r\n                                    </tr>);\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </Tab>)*/}\r\n                { /* \r\n                (<Tab eventKey=\"active\" title=\"Active\">\r\n                    <table className=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\">Size</th>\r\n                                <th scope=\"col\">Strike Price</th>\r\n                                <th scope=\"col\">Price Now</th>\r\n                                <th scope=\"col\">Break Even</th>\r\n                                <th scope=\"col\">P&L</th>\r\n                                <th scope=\"col\">Placed At</th>\r\n                                <th scope=\"col\">Expires At</th>\r\n                                <th scope=\"col\">Expires In</th>\r\n                                <th scope=\"col\">Exercise</th>\r\n                                <th scope=\"col\">Share</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Contracts.getActiveContracts().map((contact) => (\r\n                                <tr>\r\n                                    <td>{contact.optionType}</td>\r\n                                    <td>{contact.optionSize}</td>\r\n                                    <td>{contact.strikePrice}</td>\r\n                                    <td>{contact.priceNow}</td>\r\n                                    <td>{contact.breakEven}</td>\r\n                                    <td>{contact.plRealized}</td>\r\n                                    <td>{contact.placedAt}</td>\r\n                                    <td>{contact.expiresAt}</td>\r\n                                    <td>{contact.expiresIn}</td>\r\n                                    <td>{contact.exercise}</td>\r\n                                    <td>{contact.share}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </Tab>\r\n                <Tab eventKey=\"history\" title=\"History\">\r\n                    <table className=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\">Size</th>\r\n                                <th scope=\"col\">Strike Price</th>\r\n                                <th scope=\"col\">Placed At</th>\r\n                                <th scope=\"col\">Expires At</th>\r\n                                <th scope=\"col\">P&L Realized</th>\r\n                                <th scope=\"col\">Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Contracts.getActiveContracts().map((contact) => (\r\n                                <tr>\r\n                                    <td>{contact.optionType}</td>\r\n                                    <td>{contact.optionSize}</td>\r\n                                    <td>{contact.strikePrice}</td>\r\n                                    <td>{contact.placedAt}</td>\r\n                                    <td>{contact.plRealized}</td>\r\n                                    <td>{contact.expiresAt}</td>\r\n                                    <td>{contact.status}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>{' '}\r\n                </Tab>) \r\n                */ }\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OptionContracts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport EosService from '../eosio/EosService';\r\n\r\nexport default function CurrencyBalance(props) {\r\n    const [balance, setBalance] = useState();\r\n\r\n    const load = () => {\r\n        props.getBalance(props.currency, balance => {\r\n            setBalance(balance);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        load();\r\n        return () => {};\r\n    }, [props.refresh, props.currency]);\r\n\r\n    return (\r\n        <div className='mt-2'>\r\n            Balance: {balance}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nimport Crypto from '../api/Crypto';\r\nimport Contracts from '../api/Contracts';\r\nimport TradingOption from '../api/TradingOption';\r\n\r\nimport FaqPage from './faqPage';\r\nimport Features from './features';\r\nimport HoldingPeriodChart from './holdingPeriodChart';\r\nimport HoldingPeriodMessage from './holdingPeriodMessage';\r\nimport Jumbotron from './jumbotron';\r\nimport LiquidityPool from './liquidityPool';\r\nimport ConnectWallet from './connectWallet';\r\nimport OptionContracts from './optionContracts';\r\nimport CurrencyBalance from './currencyBalance';\r\n\r\nimport EosService from '../eosio/EosService';\r\n\r\nexport default class TradeOption extends Component {\r\n    state = {\r\n        // holds the form fields\r\n        tradeOption: {\r\n            option: 'CALL',\r\n            optionSize: '',\r\n            strikePrice: '',\r\n            holdingPeriod: 1,\r\n            currency: 'USDC',\r\n        },\r\n        // get the crypto current rates\r\n        cryptoCurrency: Crypto.getCryptoCurrency('USDC'),\r\n        impliedVolRate: 45.5,\r\n        // form error messages goes here\r\n        errors: {},\r\n        // hold the component state to reanimate in react-spring\r\n        components: {\r\n            holdingPeriodMessage: true,\r\n            holdingPeriodChart: true,\r\n        },\r\n        graphData: {\r\n            optionType: 'CALL',\r\n            currentPrice: 0,\r\n            strikePrice: 0,\r\n            breakEvenPrice: 0,\r\n            totalCost: 0,\r\n            previousPos: 0,\r\n            newPos: 0,\r\n        },\r\n    };\r\n\r\n    schema = {\r\n        currency: Joi.string().required().label('Currency'),\r\n        option: Joi.string().required().label('Trade Option'),\r\n        optionSize: Joi.number().required().label('Option Size'),\r\n        strikePrice: Joi.number().required().label('Strike Price'),\r\n        holdingPeriod: Joi.required().label('Holding Period'),\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        let currentState = { ...this.state };\r\n        currentState.errors = {};\r\n        this.updateState(this.state);\r\n\r\n        this.getMarketPrice();\r\n        //this.getCurrencyBalance();\r\n        this.getImpliedVolRate();\r\n    }\r\n\r\n     getMarketPrice() {\r\n        const currentCurrency = this.state.tradeOption.currency; \r\n        if (currentCurrency === 'USDC' || currentCurrency === 'DAI') {\r\n            if (process.env.REACT_APP_TEST_MARKET_PRICE) {\r\n                //const usdPrice = parseFloat(process.env.REACT_APP_TEST_MARKET_PRICE);\r\n                //Crypto.setMarketPrice('USDC', usdPrice);\r\n                //Crypto.setMarketPrice('DAI', usdPrice);\r\n                let currentState = { ...this.state };\r\n                currentState.cryptoCurrency = Crypto.getCryptoCurrency(currentCurrency);\r\n                this.updateState(currentState);\r\n                return;\r\n            }\r\n            EosService.usdPrice()\r\n                .then(price => {\r\n                    //console.log('price:', price);\r\n                    if (currentCurrency === 'USDC' && price.usdc) {\r\n                        Crypto.setMarketPrice('USDC', price.usdc);\r\n                    }\r\n                    if (currentCurrency === 'DAI' && price.dai) {\r\n                        Crypto.setMarketPrice('DAI', price.dai);\r\n                    }\r\n                    let currentState = { ...this.state };\r\n                    currentState.cryptoCurrency = Crypto.getCryptoCurrency(currentCurrency);\r\n                    this.updateState(currentState);\r\n                },\r\n                this.handleError);\r\n        }\r\n    }\r\n\r\n    getImpliedVolRate() {\r\n        EosService.optionConfig()\r\n            .then(result => {\r\n                const impliedVolRate = result.rows && result.rows[0] && result.rows[0].impliedvolrate;\r\n                if (impliedVolRate) {\r\n                    let currentState = { ...this.state };\r\n                    currentState.impliedVolRate = impliedVolRate;\r\n                    this.updateState(currentState);\r\n                }\r\n            },\r\n            this.handleError);\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.tradeOption, this.schema, options);\r\n\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) {\r\n            errors[item.path[0]] = item.message;\r\n        }\r\n        console.log(errors);\r\n        return errors;\r\n    };\r\n\r\n    updateState(state) {\r\n        let currentState = { ...state };\r\n\r\n        const fldOption = currentState.tradeOption.option;\r\n        const fldOptionSize =\r\n            parseFloat(currentState.tradeOption.optionSize) > 0 ? parseFloat(currentState.tradeOption.optionSize) : 1;\r\n        const fldMarketPrice = currentState.cryptoCurrency.marketPrice;\r\n        const fldStrikePrice = \r\n            parseFloat(currentState.tradeOption.strikePrice) > 0 ? parseFloat(currentState.tradeOption.strikePrice) : fldMarketPrice;\r\n//                ? parseFloat(currentState.tradeOption.strikePrice)\r\n//                : currentState.cryptoCurrency.strikeRate;\r\n        //const fldStrikeRate = currentState.cryptoCurrency.strikeRate;\r\n        const fldImpliedVolRate = currentState.impliedVolRate;\r\n        const fldHoldingPeriod = parseFloat(currentState.tradeOption.holdingPeriod);\r\n\r\n        currentState.graphData.totalCost = TradingOption.getTotalCost(\r\n            fldOption,\r\n            fldOptionSize,\r\n            fldMarketPrice,\r\n            fldStrikePrice,\r\n            //fldStrikeRate,\r\n            fldImpliedVolRate,\r\n            fldHoldingPeriod,\r\n            fldHoldingPeriod,\r\n        );\r\n\r\n        currentState.graphData.breakEvenPrice = TradingOption.getBreakEven(\r\n            fldOption,\r\n            //fldOptionSize,\r\n            fldMarketPrice,\r\n            fldStrikePrice,\r\n            //fldStrikeRate,\r\n            fldImpliedVolRate,\r\n            fldHoldingPeriod,\r\n            fldHoldingPeriod,\r\n        );\r\n\r\n        this.setState(currentState);\r\n    } \r\n\r\n    handleError = (err) => {\r\n        console.log('error:', err);\r\n        this.setState({\r\n            errors: {\r\n                error: err.toString()\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBuyError = (err) => {\r\n        console.log('buy error:', err);\r\n        this.setState({\r\n            errors: {\r\n                buy: err.toString()\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const currentState = { ...this.state };\r\n\r\n        currentState.components.holdingPeriodMessage = !currentState.components.holdingPeriodMessage;\r\n        currentState.tradeOption[input.name] = input.value;\r\n\r\n        this.updateState(currentState);\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n        //Contracts.addContract(this.state.tradeOption);\r\n        const option_type = (this.state.tradeOption.option === 'PUT' ? 1 : 0);\r\n        const amount = parseFloat(this.state.tradeOption.optionSize);\r\n        const strikePrice = parseFloat( this.state.tradeOption.strikePrice);\r\n        const period = parseInt(this.state.tradeOption.holdingPeriod);\r\n        const currency = this.state.tradeOption.currency;\r\n        //const marketPrice = this.state.cryptoCurrency.marketPrice;\r\n        const fee = this.state.graphData.totalCost;\r\n        EosService.optionCreateCurr(amount.toFixed(4)+' EOS', strikePrice, period, option_type, currency, fee)\r\n            .then(result => {\r\n                this.setState({\r\n                    errors: {},\r\n                    refreshOptionList: !this.state.refreshOptionList,\r\n                    refreshBalance: !this.state.refreshBalance,\r\n                });\r\n            },\r\n            this.handleBuyError);\r\n    };\r\n\r\n    handleChangeCurrency = ({ currentTarget: currency }) => {\r\n        const currentState = { ...this.state };\r\n        currentState.components.holdingPeriodMessage = !currentState.components.holdingPeriodMessage;\r\n        currentState.tradeOption.currency = currency.value;\r\n        currentState.cryptoCurrency = Crypto.getCryptoCurrency(currency.value);\r\n        this.setState(currentState);\r\n        this.getMarketPrice();\r\n    };\r\n\r\n    handleGraph = ({}) => {};\r\n\r\n    getBalance = (currency, callback) => {\r\n        EosService.getCurrencyBalance(currency)\r\n            .then(result => {\r\n                const balance = result[0];\r\n                this.setState({ balance });\r\n                callback(balance);\r\n            },\r\n            this.handleError);\r\n    }\r\n\r\n    getPoolStat = (callback) => {\r\n        EosService.poolStat()\r\n            .then(result => {\r\n                const poolStat = result.rows && result.rows[0];\r\n                this.setState({ poolStat });\r\n                callback(poolStat);\r\n            },\r\n            this.handleError);\r\n    }\r\n\r\n    render() {\r\n        const { cryptoCurrency, tradeOption, graphData, errors, components } = this.state;\r\n        return (\r\n            <>\r\n                {errors.error && <div className=\"alert alert-danger\">{errors.error}</div>}\r\n                {this.props.mode === 'home' && (\r\n                    <Jumbotron\r\n                        isLoggedIn={this.props.isLoggedIn}\r\n                        onAttachWallet={this.props.onAttachWallet}\r\n                        onDisconnectWallet={this.props.onDisconnectWallet}\r\n                    />\r\n                )}\r\n                {this.props.isLoggedIn() && (\r\n                    <div>\r\n                        <div className=\"boxStyle p-4\">\r\n                            <h2>BUY AN OPTION CONTRACT IN ONE MINUTE</h2>\r\n                            <hr />\r\n                            <form className=\"row\">\r\n                                <div className=\"col-md-12 mb-5\">\r\n                                    <label className=\"form-label\">Select Currency</label>\r\n                                    <br />\r\n                                    <select\r\n                                        name=\"crypto\"\r\n                                        id=\"crypto\"\r\n                                        className=\"form-select\"\r\n                                        onChange={this.handleChangeCurrency}\r\n                                    >\r\n                                        {Crypto.getCryptoCurrencies().map((crypto) => (\r\n                                            <option key={crypto.currency} value={crypto.currency}>\r\n                                                {crypto.currency}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <CurrencyBalance\r\n                                        getBalance={this.getBalance}\r\n                                        currency={tradeOption.currency}\r\n                                        refresh={this.state.refreshBalance}\r\n                                        handleError={this.handleError} />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label className=\"form-label\">Option Type:</label>\r\n                                    <br />\r\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Select option\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"option\"\r\n                                            id=\"optionPut\"\r\n                                            className=\"btn-check\"\r\n                                            onChange={this.handleChange}\r\n                                            value=\"PUT\"\r\n                                            checked={tradeOption.option.toString() === 'PUT'}\r\n                                        />\r\n                                        <label\r\n                                            className={\r\n                                                tradeOption.option.toString() === 'PUT'\r\n                                                    ? 'btn btn-primary'\r\n                                                    : 'btn btn-secondary'\r\n                                            }\r\n                                            htmlFor=\"optionPut\"\r\n                                        >\r\n                                            PUT\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"option\"\r\n                                            id=\"optionCall\"\r\n                                            className=\"btn-check\"\r\n                                            onChange={this.handleChange}\r\n                                            value=\"CALL\"\r\n                                            checked={tradeOption.option.toString() === 'CALL'}\r\n                                        />\r\n                                        <label\r\n                                            className={\r\n                                                tradeOption.option.toString() === 'CALL'\r\n                                                    ? 'btn btn-primary'\r\n                                                    : 'btn btn-secondary'\r\n                                            }\r\n                                            htmlFor=\"optionCall\"\r\n                                        >\r\n                                            CALL\r\n                                        </label>\r\n                                    </div>\r\n                                    {errors.option && <div className=\"alert alert-danger\">{errors.option}</div>}\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label className=\"form-label\">Option Size: </label>\r\n                                    <br />\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"optionSize\"\r\n                                            id=\"optionSize\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"1\"\r\n                                            aria-label=\"EOS\"\r\n                                            value={tradeOption.optionSize}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                            EOS\r\n                                        </span>\r\n                                    </div>\r\n                                    {errors.optionSize && <div className=\"alert alert-danger\">{errors.optionSize}</div>}\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label className=\"form-label\">Strike Price:</label>\r\n                                    <br />\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"strikePrice\"\r\n                                            id=\"strikePrice\"\r\n                                            className=\"form-control\"\r\n                                            placeholder={/*cryptoCurrency.strikeRate*/cryptoCurrency.marketPrice.toFixed(2)}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                           USD\r\n                                        </span>\r\n                                    </div>\r\n                                    {errors.strikePrice && <div className=\"alert alert-danger\">{errors.strikePrice}</div>}\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3\">\r\n                                    <label className=\"form-label\">Period of Holding:</label>\r\n                                    <br />\r\n                                    <select\r\n                                        name=\"holdingPeriod\"\r\n                                        id=\"holdingPeriod\"\r\n                                        className=\"form-select\"\r\n                                        aria-label=\"Default select example\"\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        <option value=\"1\">1 day</option>\r\n                                        <option value=\"7\">1 week (7 days)</option>\r\n                                        <option value=\"14\">2 weeks (14 days)</option>\r\n                                        <option value=\"21\">3 weeks (21 days)</option>\r\n                                        <option value=\"28\">4 weeks (28 days)</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <HoldingPeriodMessage\r\n                                        key={components.holdingPeriodMessage}\r\n                                        option={tradeOption.option}\r\n                                        holdingPeriod={tradeOption.holdingPeriod}\r\n                                        strikePrice={\r\n                                            parseInt(tradeOption.strikePrice) > 0\r\n                                                ? tradeOption.strikePrice\r\n                                                : cryptoCurrency.marketPrice.toFixed(2) //cryptoCurrency.strikeRate\r\n                                        }\r\n                                        breakEvenPrice={graphData.breakEvenPrice.toFixed(2)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <HoldingPeriodChart\r\n                                        strikePrice={\r\n                                            parseInt(tradeOption.strikePrice) > 0\r\n                                                ? tradeOption.strikePrice\r\n                                                : cryptoCurrency.marketPrice.toFixed(2) //cryptoCurrency.strikeRate\r\n                                        }\r\n                                        marketPrice={cryptoCurrency.marketPrice}\r\n                                        option={tradeOption.option}\r\n                                        currentPrice={\r\n                                            parseInt(tradeOption.strikePrice) > 0\r\n                                                ? tradeOption.strikePrice\r\n                                                : cryptoCurrency.marketPrice.toFixed(2) //cryptoCurrency.strikeRate\r\n                                        }\r\n                                        breakEvenPrice={graphData.breakEvenPrice}\r\n                                        totalCost={graphData.totalCost}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    {!this.props.isLoggedIn() ? (\r\n                                        <ConnectWallet\r\n                                            isLoggedIn={this.props.isLoggedIn}\r\n                                            onAttachWallet={this.props.onAttachWallet}\r\n                                            onDisconnectWallet={this.props.onDisconnectWallet}\r\n                                        />\r\n                                    ) : [\r\n                                        <button className=\"btn btn-primary\" onClick={this.handleSubmit}>\r\n                                            Buy Option Contract\r\n                                        </button>,\r\n                                        errors.buy && <div className=\"alert alert-danger mt-4\">{errors.buy}</div>\r\n                                    ]}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <LiquidityPool \r\n                    getPoolStat={this.getPoolStat}\r\n                    handleError={this.handleError} \r\n                />\r\n                {this.props.mode !== 'home' && this.props.isLoggedIn() && (\r\n                    <OptionContracts \r\n                        marketPrice={\r\n                            cryptoCurrency.marketPrice\r\n                        }\r\n                        refresh={this.state.refreshOptionList} \r\n                        handleError={this.handleError} />\r\n                )}\r\n                <Features />\r\n                {/*(<FaqPage />)*/}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TradeOption from '../tradeOption';\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <TradeOption\r\n            mode=\"home\"\r\n            isLoggedIn={props.isLoggedIn}\r\n            onAttachWallet={props.onAttachWallet}\r\n            onDisconnectWallet={props.onDisconnectWallet}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/color-bg-2.f83e645f.png\";","export default __webpack_public_path__ + \"static/media/color-bg.0132cc7a.png\";","import React from 'react';\r\nimport bannerBackground from '../images/shape/color-bg-2.png';\r\nimport midBackground from '../images/shape/color-bg.png';\r\n\r\nfunction Backgrounds(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"banner-color\">\r\n                <img src={bannerBackground} alt=\"\" />\r\n            </div>\r\n            <div className=\"hegeos-color\">\r\n                <img src={midBackground} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Backgrounds;\r\n","import React from 'react';\r\nimport TradeOption from '../tradeOption';\r\n\r\nfunction Holders(props) {\r\n    return (\r\n        <TradeOption\r\n            mode=\"holders\"\r\n            isLoggedIn={props.isLoggedIn}\r\n            onAttachWallet={props.onAttachWallet}\r\n            onDisconnectWallet={props.onDisconnectWallet}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Holders;\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nfunction PieChart(props) {\r\n    const data = {\r\n        labels: ['Liquidity Provided', 'Net P&L'],\r\n        datasets: [\r\n            {\r\n                label: 'Total USD',\r\n                data: [props.liquidity, props.pnl],\r\n                backgroundColor: ['#199396', '#F26D26'],\r\n                borderColor: ['#199396', '#F26D26'],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return <Pie data={data} />;\r\n}\r\n\r\nexport default PieChart;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PieChart from '../pieChart';\r\nimport Joi from 'joi-browser';\r\nimport LiquidityPool from '../liquidityPool';\r\n\r\nimport EosService from '../../eosio/EosService';\r\n\r\nconst pjson = require('../../../package.json');\r\n\r\nconst liquidityData = {\r\n    currency: 'EOS',\r\n    liquidityProvider: 1,\r\n    PnL: 2,\r\n    share: 200,\r\n    poolSize: 32154656,\r\n};\r\n\r\nfunction Liquidity(props) {\r\n    const [depositAmount, setDepositAmount] = useState(1);\r\n    const [withdrawAmount, setWithdrawAmount] = useState(1);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [refreshPool, setRefreshPool] = useState(false);\r\n    const [currentRate, setCurrentRate] = useState(1);\r\n\r\n    const sharePool = (share, poolSize) => {\r\n        return (poolSize / share) * 100;\r\n    };\r\n\r\n    const validateDeposit = () => {\r\n        const { error } = Joi.validate(\r\n            { \r\n                depositAmount \r\n            }, \r\n            {\r\n                depositAmount: Joi.number().required().label('Deposited Amount'),\r\n            }, \r\n            { abortEarly: false }\r\n        );\r\n\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) {\r\n            errors[item.path[0]] = item.message;\r\n        }\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n    const validateWithdraw = () => {\r\n        const { error } = Joi.validate(\r\n            { \r\n                withdrawAmount \r\n            }, \r\n            {\r\n                withdrawAmount: Joi.number().required().label('Withdrawal Amount'),\r\n            }, \r\n            { abortEarly: false }\r\n        );\r\n\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) {\r\n            errors[item.path[0]] = item.message;\r\n        }\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n    const handleDepositAmountChange = ({ currentTarget: input }) => {\r\n        setDepositAmount(input.value);\r\n    };\r\n\r\n    const handleWithdrawAmountChange = ({ currentTarget: input }) => {\r\n        setWithdrawAmount(input.value);\r\n    };\r\n\r\n    const handleError = (err) => {\r\n        console.log(err);\r\n        setErrors({\r\n            error: err.toString()\r\n        });\r\n    }\r\n\r\n    const handleDepositError = (err) => {\r\n        console.log(err);\r\n        setErrors({\r\n            deposit: err.toString()\r\n        });\r\n    }\r\n\r\n    const handleWithdrawError = (err) => {\r\n        console.log(err);\r\n        setErrors({\r\n            withdraw: err.toString()\r\n        });\r\n    }\r\n\r\n    const handleDeposit = (e) => {\r\n        const errors = validateDeposit();\r\n        setErrors(errors || {});\r\n        if (errors) return;\r\n        const amount = parseFloat(depositAmount);\r\n        console.log('deposit amount:', amount);\r\n        EosService.poolDeposit(amount.toFixed(4)+' EOS', '0.0000 '+process.env.REACT_APP_HEGEOS_SYMBOL)\r\n            .then(result => {\r\n                setErrors({});\r\n                setRefreshPool(!refreshPool);\r\n            },\r\n            handleDepositError)\r\n    };\r\n\r\n    const handleWithdraw = (e) => {\r\n        const errors = validateWithdraw();\r\n        setErrors(errors || {});\r\n        if (errors) return;\r\n        const amount = parseFloat(withdrawAmount);\r\n        const maxburn = amount * currentRate;\r\n        console.log('withdraw amount:', amount, 'maxbirn:', maxburn);\r\n        EosService.poolWithdraw(amount.toFixed(4)+' EOS', maxburn.toFixed(4)+' '+process.env.REACT_APP_HEGEOS_SYMBOL)\r\n            .then(result => {\r\n                setErrors({});\r\n                setRefreshPool(!refreshPool);\r\n            },\r\n            handleWithdrawError)\r\n    };\r\n\r\n    const sharedPool = sharePool(liquidityData.poolSize, liquidityData.share);\r\n\r\n    const getPoolStat = (callback) => {\r\n        EosService.poolStat()\r\n            .then(result => {\r\n                const poolStat = result.rows && result.rows[0];\r\n                console.log('pool stat:', poolStat)\r\n                callback(poolStat);\r\n                EosService.hegeosStat()\r\n                    .then(result => {\r\n                        const hegeosStat = result.rows && result.rows[0];\r\n                        console.log('HEGEOS stat:', hegeosStat);\r\n                        if (poolStat && hegeosStat) {\r\n                            const totaldeposit = parseFloat(poolStat.totaldeposit.split(' ')[0]);\r\n                            const lockedpremium = parseFloat(poolStat.lockedpremium.split(' ')[0]);\r\n                            const supply = parseFloat(hegeosStat.supply.split(' ')[0]);\r\n                            console.log('totaldeposit:', totaldeposit);\r\n                            console.log('lockedpremium:', lockedpremium);\r\n                            console.log('supply:', supply);\r\n                            if (totaldeposit > lockedpremium && supply > 0) {\r\n                                const hegeosRate = supply / (totaldeposit - lockedpremium);\r\n                                console.log('HEGEOS rate:', hegeosRate);\r\n                                setCurrentRate(hegeosRate);\r\n                            }\r\n                        }\r\n                    },\r\n                    handleError);\r\n            },\r\n            handleError);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-7 pt-md-5\">\r\n                <h2>EARN YIELD ON {liquidityData.currency} AS A LIQUIDITY PROVIDER</h2>\r\n                <p>\r\n                    Provide liquidity to a non-custodial pool. EOS Pool is used for selling CALL\r\n                    and PUT options. Earn premiums in an automated way.\r\n                </p>\r\n                {/*(<Link to={pjson.homepage+\"/faq\"}>How Hegios.io works?</Link>)*/}\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <img src={pjson.homepage+\"/images/benefits-6.png\"} className=\"w-100\" />\r\n            </div>\r\n\r\n            { /* (<div className=\"col-md-12\">\r\n                <h2>EARN YIELD ON {liquidityData.currency} AS A LIQUIDITY PROVIDER</h2>\r\n                <div className=\"boxStyle  p-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <PieChart\r\n                                liquidity={liquidityData.liquidityProvider}\r\n                                pnl={liquidityData.PnL}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div class=\"callout callout-strike p-4\">\r\n                                <span>Liquidity Provider</span>\r\n                                <h3>0 USD</h3>\r\n                            </div>\r\n                            <div class=\"callout callout-total p-5\">\r\n                                <span>Net P&L</span>\r\n                                <h3>0 USD</h3>\r\n                                <a className=\"btn btn-warning\">Withdraw net Profits</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <div class=\"callout callout-even h-100\">\r\n                                <h2>P&L Dynamics</h2>\r\n                                <p>this will be added soon.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>) */ }\r\n\r\n            { /* (<div className=\"col-md-12\">\r\n                <div className=\"liquidityPool boxStyle  p-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            Your Share in the Pool :<br />\r\n                            <h3>{sharedPool + '%'}</h3>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            {liquidityData.currency} Pool Size :<br />\r\n                            <h3>\r\n                                {liquidityData.share + ' ' +\r\n                                    liquidityData.currency + \r\n                                    ' / ' +\r\n                                    liquidityData.poolSize + ' ' +\r\n                                    liquidityData.currency}\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"progress\">\r\n                                <div\r\n                                    className=\"progress-bar bg-primary\"\r\n                                    role=\"progressbar\"\r\n                                    style={{ width: sharedPool + '%' }}\r\n                                    aria-valuenow={sharedPool}\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"100\"\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>) */ }\r\n            {errors.error && <div className=\"alert alert-danger\">{errors.error}</div>}\r\n            {props.isLoggedIn() && (\r\n                <div className=\"col-md-12\">\r\n                    <h2>PROVIDE LIQUIDITY</h2>\r\n                    <hr />\r\n                    <div className=\" boxStyle p-4\">\r\n                        <div className=\"callout callout-even small\">\r\n                            Liquidity (liquidity providers) receive {process.env.REACT_APP_HEGEOS_SYMBOL} tokens that give them a share in\r\n                            the pool's premiums that are distributed to them after the options contracts\r\n                            expiration. When a writer wishes to receive their {liquidityData.currency}{' '}\r\n                            back, he should call the Withdraw function of the contract and burn {process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                            tokens. {liquidityData.currency} will be sent to the writer’s{' '}\r\n                            address. Attention: do not send {process.env.REACT_APP_HEGEOS_SYMBOL} tokens to the\r\n                            contract address because you will lose your funds.\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-4\">\r\n                                <br />\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"1\"\r\n                                        aria-label=\"EOS\"\r\n                                        value={depositAmount}\r\n                                        onChange={handleDepositAmountChange}\r\n                                    />\r\n                                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                        EOS\r\n                                    </span>\r\n                                </div>\r\n                                {errors.depositAmount && <div className=\"alert alert-danger\">{errors.depositAmount}</div>}\r\n                            </div>\r\n                            <div className=\"col-sm-4 text-center with-arrow\">\r\n                                <div className=\"provide-liquidity__arrow\"></div>\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                {' '}\r\n                                <br />\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"1\"\r\n                                        aria-label={process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                        readonly=\"true\"\r\n                                        value={(depositAmount * currentRate).toFixed(2)}\r\n                                    />\r\n                                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                        {process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <a className=\"btn btn-primary col-md-12\" onClick={() => handleDeposit()}>\r\n                                    Deposit\r\n                                </a>\r\n                                {errors.deposit && <div className=\"alert alert-danger mt-4\">{errors.deposit}</div>}\r\n                                <p className=\"small pt-4\">\r\n                                    Click the \"Deposit\" button and {depositAmount} {liquidityData.currency}{' '}\r\n                                    will be sent from your {liquidityData.currency} address to the liquidity pool contract.\r\n                                    After the transaction is confirmed by miners, you will automatically\r\n                                    receive {process.env.REACT_APP_HEGEOS_SYMBOL} tokens. These tokens will\r\n                                    give you a share in premiums paid by the options holders.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <br />\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"1\"\r\n                                        aria-label={process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                        value={withdrawAmount}\r\n                                        onChange={handleWithdrawAmountChange}\r\n                                    />\r\n                                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                        {process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                    </span>\r\n                                </div>\r\n                                {errors.withdrawAmount && <div className=\"alert alert-danger\">{errors.withdrawAmount}</div>}\r\n                            </div>\r\n                            <div className=\"col-sm-4 text-center with-arrow\">\r\n                                <div className=\"provide-liquidity__arrow\"></div>\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                {' '}\r\n                                <br />\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"1\"\r\n                                        aria-label=\"EOS\"\r\n                                        readonly=\"true\"\r\n                                        value={(withdrawAmount * currentRate).toFixed(2)}\r\n                                    />\r\n                                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                        EOS\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <a className=\"btn btn-primary col-md-12\" onClick={() => handleWithdraw()}>\r\n                                    Withdraw\r\n                                </a>\r\n                                {errors.withdraw && <div className=\"alert alert-danger mt-4\">{errors.withdraw}</div>}\r\n                                <p className=\"small pt-4\">\r\n                                    Click the \"Withdraw\" button and {withdrawAmount} {liquidityData.currency}{' '}\r\n                                    will be sent to your {liquidityData.currency} address.\r\n                                </p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row text-center\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <h3>TBA</h3>Avg. Returns (30 Days)\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <h3>TBA</h3>Projected Returns (APY)\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <h3>TBA</h3>Gross Premiums Earned by Writers\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <LiquidityPool \r\n                        getPoolStat={getPoolStat}\r\n                        refresh={refreshPool} \r\n                        handleError={props.handleError} \r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Liquidity;\r\n","import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nlet hegeosRate = {\r\n    buy: 0.000356600004999993,\r\n    sell: 0.000320939995500005,\r\n    buyUSD: 1.105,\r\n    sellUSD: 0.995,\r\n    buyDAI: 0.000357,\r\n    sellDAI: 0.000321,\r\n    max: 100000000,\r\n    aquired: 0,\r\n};\r\n\r\nconst dataBuy = {\r\n    labels: ['1', '2', '3', '4', '5', '6'],\r\n    datasets: [\r\n        {\r\n            label: 'Price Change',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#199396',\r\n            borderColor: '#199396',\r\n        },\r\n        {\r\n            label: 'Current Price',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#FFEE51',\r\n            borderColor: '#FFEE51',\r\n        },\r\n        {\r\n            label: 'Bonding Curve',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#F26D26',\r\n            borderColor: '#F26D26',\r\n        },\r\n    ],\r\n};\r\n\r\nconst dataSell = {\r\n    labels: ['1', '2', '3', '4', '5', '6'],\r\n    datasets: [\r\n        {\r\n            label: 'Price Change',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#199396',\r\n            borderColor: '#199396',\r\n        },\r\n        {\r\n            label: 'Current Price',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#FFEE51',\r\n            borderColor: '#FFEE51',\r\n        },\r\n        {\r\n            label: 'Bonding Curve',\r\n            data: [0],\r\n            fill: true,\r\n            backgroundColor: '#F26D26',\r\n            borderColor: '#F26D26',\r\n        },\r\n    ],\r\n};\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\nfunction Trade(props) {\r\n    const [action, setAction] = useState('buy');\r\n    const [buyPrice, setBuyPrice] = useState(1);\r\n    const [sellPrice, setSellPrice] = useState(1);\r\n\r\n    const handleBuySubmit = (e) => {\r\n        alert('BUY HERE');\r\n    };\r\n\r\n    const handleSellSubmit = (e) => {\r\n        alert('SELL HERE');\r\n    };\r\n\r\n    const handleChangeBuy = ({ currentTarget: input }) => {\r\n        setBuyPrice(input.value);\r\n    };\r\n    const handleChangeSell = ({ currentTarget: input }) => {\r\n        setSellPrice(input.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <h2>BONDING CURVE CONTRACT: BUY OR SELL {process.env.REACT_APP_HEGEOS_SYMBOL} TOKENS.</h2>\r\n                <p>\r\n                    The {process.env.REACT_APP_HEGEOS_SYMBOL} token price increases as the supply of the token increases. When a new buyer has acquired\r\n                    the {process.env.REACT_APP_HEGEOS_SYMBOL} token, each subsequent buyer will have to pay a slightly higher price for each token. As\r\n                    more people will discover {process.env.REACT_APP_HEGEOS_SYMBOL} protocol and buying continues, the value of each token gradually\r\n                    increases along the bonding curve. DAI-{process.env.REACT_APP_HEGEOS_SYMBOL} swap fee: 0%. {process.env.REACT_APP_HEGEOS_SYMBOL}-DAI swap fee: 10%.\r\n                </p>\r\n            </div>\r\n\r\n            <Tabs id=\"trading\" activeKey={action} onSelect={(k) => setAction(k)}>\r\n                <Tab eventKey=\"buy\" title=\"Buy\">\r\n                    <div className=\"row pt-5\">\r\n                        <div className=\"col-sm-4\">\r\n                            <label className=\"form-label\">You are buying this amount of HEGIC:</label>\r\n                            <br />\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"buyPrice\"\r\n                                    id=\"buyPrice\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"1\"\r\n                                    aria-label={process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                    value={buyPrice}\r\n                                    onChange={handleChangeBuy}\r\n                                />\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                    {process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 text-center with-arrow\">\r\n                            <div className=\"provide-liquidity__arrow\"></div>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <label className=\"form-label\">You are sending this amount of DAI:</label>\r\n                            <br />\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"buyAmount\"\r\n                                    id=\"buyAmount\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"1\"\r\n                                    aria-label=\"USD\"\r\n                                    readonly=\"true\"\r\n                                    value={buyPrice * hegeosRate.buy}\r\n                                />\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                    DAI\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <Line data={dataBuy} options={options} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"callout callout-strike\">\r\n                                Your Buy Price\r\n                                <h3>{parseFloat(hegeosRate.buy).toFixed(6)} DAI</h3>\r\n                                <small>≈ ${hegeosRate.buyUSD} USD</small>\r\n                            </div>\r\n                            <div className=\"callout callout-even\">\r\n                                Acquired on the Bonding Curve\r\n                                <h3>{hegeosRate.aquired} {process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                                <small>{hegeosRate.aquired * hegeosRate.buyDAI} DAI</small>\r\n                            </div>\r\n                            <div className=\"callout callout-total\">\r\n                                Available on the Bonding Curve\r\n                                <h3>{hegeosRate.max} {process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                                <small>{hegeosRate.max * hegeosRate.buy}</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <a className=\"btn btn-primary col-md-12\" onClick={() => handleBuySubmit()}>\r\n                                BUY\r\n                            </a>\r\n                            <p className=\"small pt-4\">\r\n                                Each time {process.env.REACT_APP_HEGEOS_SYMBOL} tokens are acquired using the bonding curve contract, the EOS-{process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                swap transaction increases the price of {process.env.REACT_APP_HEGEOS_SYMBOL} token for a fixed value of 0.00000000001\r\n                                DAI. The contract itself is used as a price oracle. If a token holder wants to swap\r\n                                {process.env.REACT_APP_HEGEOS_SYMBOL} tokens for ETH using the bonding curve contract, she will pay a 10% swap fee on\r\n                                this transaction.\r\n                            </p>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                </Tab>\r\n                <Tab eventKey=\"sell\" title=\"Sell\">\r\n                    <div className=\"row  pt-5\">\r\n                        <div className=\"col-sm-4\">\r\n                            <label className=\"form-label\">You are selling this amount of HEGIC:</label>\r\n                            <br />\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"sellPrice\"\r\n                                    id=\"sellPrice\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"1\"\r\n                                    aria-label={process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                    value={sellPrice}\r\n                                    onChange={handleChangeSell}\r\n                                />\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                    {process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 text-center with-arrow\">\r\n                            <div className=\"provide-liquidity__arrow\"></div>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <label className=\"form-label\">You are sending this amount of DAI:</label>\r\n                            <br />\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"sellAmount\"\r\n                                    id=\"sellAmount\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"1\"\r\n                                    aria-label=\"USD\"\r\n                                    readonly=\"true\"\r\n                                    value={sellPrice * hegeosRate.sell}\r\n                                />\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                    DAI\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <Line data={dataSell} options={options} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"callout callout-strike\">\r\n                                Your sell Price\r\n                                <h3>{parseFloat(hegeosRate.sell).toFixed(6)} DAI</h3>\r\n                                <small>≈ ${hegeosRate.sellUSD} USD</small>\r\n                            </div>\r\n                            <div className=\"callout callout-even\">\r\n                                Acquired on the Bonding Curve\r\n                                <h3>{hegeosRate.aquired} {process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                                <small>{hegeosRate.aquired * hegeosRate.sellDAI} DAI</small>\r\n                            </div>\r\n                            <div className=\"callout callout-total\">\r\n                                Available on the Bonding Curve\r\n                                <h3>{hegeosRate.max} {process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                                <small>{hegeosRate.max * hegeosRate.sell}</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <a className=\"btn btn-primary col-md-12\" onClick={() => handleSellSubmit()}>\r\n                                SELL\r\n                            </a>\r\n                            <p className=\"small pt-4\">\r\n                                Each time {process.env.REACT_APP_HEGEOS_SYMBOL} tokens are acquired using the bonding curve contract, the EOS-{process.env.REACT_APP_HEGEOS_SYMBOL}\r\n                                swap transaction increases the price of {process.env.REACT_APP_HEGEOS_SYMBOL} token for a fixed value of 0.00000000001\r\n                                DAI. The contract itself is used as a price oracle. If a token holder wants to swap\r\n                                {process.env.REACT_APP_HEGEOS_SYMBOL} tokens for ETH using the bonding curve contract, she will pay a 10% swap fee on\r\n                                this transaction.\r\n                            </p>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Trade;\r\n","import React, { useState } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nconst rewardsData = [\r\n    { id: 1, type: 'EOS', amount: 30, fee: 3, reward: 34 },\r\n    { id: 2, type: 'DAI', amount: 40, fee: 3, reward: 24 },\r\n    { id: 3, type: 'EOS', amount: 10, fee: 1, reward: 3 },\r\n    { id: 4, type: 'EOS', amount: 32, fee: 3.2, reward: 13 },\r\n];\r\n\r\nlet utilization = [];\r\n\r\nconst cryptoTypes = ['ALL', 'EOS', 'DAI'];\r\n\r\nutilization['EOS'] = {\r\n    rate: 165000,\r\n    min: 0,\r\n    max: 100,\r\n};\r\nutilization['DAI'] = {\r\n    rate: 165000,\r\n    min: 25,\r\n    max: 100,\r\n};\r\nutilization['ALL'] = {\r\n    rate: utilization['EOS'].rate + utilization['DAI'].rate,\r\n    min: 25,\r\n    max: 100,\r\n};\r\n\r\nconst claimReward = (id) => {\r\n    alert('claiming ' + id);\r\n};\r\n\r\nfunction Utilization(props) {\r\n    const [key, setKey] = useState('ALL');\r\n\r\n    return (\r\n        <div>\r\n            <h2>TRADE DAI & EOS OPTIONS AND EARN {process.env.REACT_APP_HEGEOS_SYMBOL} REWARDS</h2>\r\n            <p>\r\n                Options buyers can claim rewards in {process.env.REACT_APP_HEGEOS_SYMBOL}. After buying DAI or EOS options on {process.env.REACT_APP_HEGEOS_SYMBOL} you will be able\r\n                to claim your rewards. Rewards can be claimed for each option. Reward's size in {process.env.REACT_APP_HEGEOS_SYMBOL} tokens depends on\r\n                the size and period of an option. You will need to manually claim {process.env.REACT_APP_HEGEOS_SYMBOL}.\r\n            </p>\r\n            <div className=\"row\">\r\n                <Tabs id=\"utilization\" activeKey={key} onSelect={(k) => setKey(k)}>\r\n                    {cryptoTypes.map((type) => (\r\n                        <Tab eventKey={type} title={type}>\r\n                            <table className=\"table table-dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Type</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Fee</th>\r\n                                        <th>Reward</th>\r\n                                        <th>Claim</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {rewardsData\r\n                                        .filter((d) => d.type === type || type === 'ALL')\r\n                                        .map((data) => (\r\n                                            <tr key={data.id}>\r\n                                                <td>{data.id}</td>\r\n                                                <td>{data.type}</td>\r\n                                                <td>{data.amount}</td>\r\n                                                <td>{data.fee}</td>\r\n                                                <td>{data.reward}</td>\r\n                                                <td>\r\n                                                    <a\r\n                                                        className=\"btn btn-sm btn-success\"\r\n                                                        onClick={() => claimReward(data.id)}\r\n                                                    >\r\n                                                        Claim\r\n                                                    </a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </Tab>\r\n                    ))}\r\n                </Tabs>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    Total daily amount :<br />\r\n                    <h3>{utilization[key].rate + ' ' + process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    Distributed today :<br />\r\n                    <h3>{utilization[key].min + ' / ' + utilization[key].max} {process.env.REACT_APP_HEGEOS_SYMBOL}</h3>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"progress\">\r\n                        <div\r\n                            className=\"progress-bar bg-primary\"\r\n                            role=\"progressbar\"\r\n                            style={{ width: utilization[key].min + '%' }}\r\n                            aria-valuenow={utilization[key].rate}\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Utilization;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Analytics from './holders/analytics';\r\nimport Earn from './holders/earn';\r\nimport Mining from './holders/mining';\r\nimport Trade from './holders/trade';\r\nimport Utilization from './holders/utilization';\r\n\r\nconst pjson = require('../../../package.json');\r\n\r\nconst tokenData = {\r\n    currency: 'DAI',\r\n    hegeosOwn: 0,\r\n    daiBalance: 0,\r\n    totalProvided: 281902,\r\n};\r\n\r\nfunction TokenHolders(props) {\r\n    const [screen, setScreen] = useState('mining');\r\n\r\n    const activeClass = 'p-3 rounded-2 bg-primary active';\r\n    const nonActiveClass = 'p-3 rounded-2 bg-primary';\r\n\r\n    const handleScreen = (event, title) => {\r\n        console.log(event, title);\r\n        setScreen(title);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-7 pt-md-5\">\r\n                    <h2>DISCOVER FOUR TYPES OF JOBS THAT HEGIC CAN DO FOR YOU</h2>\r\n                    <p>I. Win big with call options: fixed price and unlimited upside.</p>\r\n                    <p>II. Protect your holdings with put options or earn speculating.</p>{' '}\r\n                    <p>III. Earn yield on {tokenData.currency} in a set-and-forget manner.</p>\r\n                    <p>IV. Participate in staking and earn rewards in WBTC or ETH.</p>\r\n                    <Link to={pjson.homepage+\"/faq\"}>How Hegios.io works?</Link>\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                    <img src={pjson.homepage+\"/images/benefits-6.png\"} className=\"w-100\" />\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row text-center\">\r\n                <div className=\"col\">\r\n                    <div className=\"p-3 rounded-2 bg-primary\">\r\n                        <h3>0</h3> Your transferrable {tokenData.currency}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"p-3 rounded-2 bg-primary\">\r\n                        <h3>0</h3> Your Staked Hegic\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"p-3 rounded-2 bg-primary\">\r\n                        <h3>0</h3> Current {tokenData.currency} Price\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"p-3 rounded-2 bg-primary\">\r\n                        <h3>0</h3> Total USD Value of Holdings\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-5 text-center interface\">\r\n                <h2>Choose the Interface that you want to interact with</h2>\r\n                <hr />\r\n                <div className=\"col\">\r\n                    <div\r\n                        className={screen === 'mining' ? activeClass : nonActiveClass}\r\n                        onClick={(e) => handleScreen(e, 'mining')}\r\n                    >\r\n                        LIQUIDITY\r\n                        <br />\r\n                        MINING\r\n                        <br />\r\n                        REWARDS\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div\r\n                        className={screen === 'utilization' ? activeClass : nonActiveClass}\r\n                        onClick={(e) => handleScreen(e, 'utilization')}\r\n                    >\r\n                        LIQUIDITY\r\n                        <br />\r\n                        UTILIZATION\r\n                        <br />\r\n                        REWARDS\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div\r\n                        className={screen === 'trade' ? activeClass : nonActiveClass}\r\n                        onClick={(e) => handleScreen(e, 'trade')}\r\n                    >\r\n                        BONDING CURVE :<br />\r\n                        BUY OR SELL\r\n                        <br />\r\n                        {tokenData.currency}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div\r\n                        className={screen === 'analytics' ? activeClass : nonActiveClass}\r\n                        onClick={(e) => handleScreen(e, 'analytics')}\r\n                    >\r\n                        HEGIC <br />\r\n                        TOKEN <br />\r\n                        ANALYTICS\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row pt-5 text-center\">\r\n                <hr />\r\n                {screen === 'mining' && (\r\n                    <Mining\r\n                        totalProvided={tokenData.totalProvided}\r\n                        hegeosOwn={tokenData.hegeosOwn}\r\n                        daiBalance={tokenData.daiBalance}\r\n                        currency={tokenData.currency}\r\n                    />\r\n                )}\r\n                {screen === 'utilization' && <Utilization />}\r\n                {screen === 'trade' && <Trade />}\r\n                {screen === 'analytics' && <Analytics />}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TokenHolders;\r\n","import React, {useState} from 'react';\r\nimport {Route, Switch } from 'react-router-dom'\r\n\r\nimport './App.scss';\r\nimport Wallet from './api/Wallets';\r\n\r\nimport Footer from './components/footer';\r\nimport Navbar from './components/navbar';\r\nimport Home from './components/pages/home';\r\nimport Backgrounds from './components/backgrounds';\r\nimport Holders from './components/pages/holders';\r\nimport Liquidity from './components/pages/liquidity';\r\nimport FaqPage from './components/faqPage';\r\nimport TokenHolders from './components/pages/tokenHolders';\r\n\r\nimport { Anchor } from 'ual-anchor';\r\nimport { UALProvider, withUAL } from 'ual-reactjs-renderer';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EosService from './eosio/EosService';\r\n\r\nconst pjson = require('../package.json');\r\n\r\nclass HegeosApp extends React.Component {\r\n  static propTypes = {\r\n    ual: PropTypes.shape({\r\n      activeUser: PropTypes.object,\r\n      activeAuthenticator: PropTypes.object,\r\n      logout: PropTypes.func,\r\n      showModal: PropTypes.func,\r\n    }).isRequired,\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      wallet: false\r\n    }\r\n  }\r\n\r\n  isLoggedIn = () => {\r\n    //return this.wallet !== false;\r\n    return EosService.isLoggedIn(this.props);\r\n  }\r\n\r\n  attachWallet = (/* wallet */) => {\r\n    this.props.ual.showModal();\r\n    //Wallet.attachWallet(wallet.walletCode);\r\n    //this.setState({\r\n    //  wallet: wallet.walletName\r\n    //});\r\n  };\r\n\r\n  disconnectWallet = (wallet) => {\r\n    const { ual: { activeUser } } = this.props;\r\n    if (activeUser) {\r\n      this.props.ual.logout();\r\n    }    \r\n    this.setState({\r\n      wallet: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"container\">\r\n          <Navbar\r\n            isLoggedIn={this.isLoggedIn}\r\n            onAttachWallet={this.attachWallet}\r\n            onDisconnectWallet={this.disconnectWallet}\r\n          />\r\n          <div className=\"content\">\r\n            <Switch>\r\n              <Route path={pjson.homepage+\"/holders\"}>\r\n                <Holders\r\n                  isLoggedIn={this.isLoggedIn}\r\n                  onAttachWallet={this.attachWallet}\r\n                  onDisconnectWallet={this.disconnectWallet}\r\n                />\r\n              </Route>\r\n              <Route path={pjson.homepage+\"/liquidity\"}>\r\n                <Liquidity \r\n                  isLoggedIn={this.isLoggedIn}\r\n                />\r\n              </Route>\r\n              <Route path={pjson.homepage+\"/faq\"}>\r\n                <FaqPage />\r\n              </Route>{' '}\r\n              <Route exact path={pjson.homepage+\"/\"}>\r\n                {this.isLoggedIn() && (\r\n                  <Holders\r\n                    isLoggedIn={this.isLoggedIn}\r\n                    onAttachWallet={this.attachWallet}\r\n                    onDisconnectWallet={this.disconnectWallet}\r\n                  />\r\n                )}\r\n                {!this.isLoggedIn() && (\r\n                  <Home\r\n                    isLoggedIn={this.isLoggedIn}\r\n                    onAttachWallet={this.attachWallet}\r\n                    onDisconnectWallet={this.disconnectWallet}\r\n                  />\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n        <Backgrounds />\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst chains = [{\r\n  chainId: process.env.REACT_APP_CHAIN_ID,\r\n  name: process.env.REACT_APP_CHAIN_NAME,\r\n  rpcEndpoints: [{\r\n      protocol: 'https',\r\n      host: (new URL(process.env.REACT_APP_NODE_ENDPOINT)).host,\r\n      port: 443,\r\n  }]\r\n}]\r\n\r\nclass UALWrapper extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        const search = window.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const chainId = params.get('chain');\r\n        this.state = {\r\n            chainId: chainId || chains[0].chainId\r\n        }\r\n    }\r\n\r\n    setChain = (event) => {\r\n        this.setState({ chainId: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { chainId } = this.state;\r\n        const { available } = this.props;\r\n        const [ chain ] = available.filter((c) => c.chainId === chainId);\r\n        if (!chain) {\r\n            return (\r\n                <div>Invalid Chain ID</div>\r\n            );\r\n        }\r\n        const anchor = new Anchor([chain], {\r\n            // Required: The app name, required by anchor-link. Short string identifying the app\r\n            appName: 'hegeos',\r\n            // Optional: a @greymass/eosio APIClient from eosjs for both your use and to use internally in UAL\r\n            // client = new APIClient({ provider }),\r\n            // Optional: a JsonRpc instance from eosjs for your use\r\n            // rpc: new JsonRpc(),\r\n            // Optional: The callback service URL to use, defaults to https://cb.anchor.link\r\n            // service: 'https://cb.anchor.link',\r\n            // Optional: A flag to disable the Greymass Fuel integration, defaults to false (enabled)\r\n            // disableGreymassFuel: false,\r\n            // Optional: An account name on a Fuel enabled network to specify as the referrer for transactions\r\n            // fuelReferrer: 'teamgreymass',\r\n            // Optional: A flag to enable the Anchor Link UI request status, defaults to true (enabled)\r\n            // requestStatus: true,  \r\n            // Optional: Whether or not to verify the signatures during user login, defaults to false (disabled)\r\n            // verifyProofs: false,\r\n        });\r\n        //const ledger = new Ledger([chain]);\r\n        //const scatter = new Scatter([chain], { appName: 'hegeos' });\r\n        return (\r\n            <div>\r\n                <UALProvider\r\n                    appName='Hegeos'\r\n                    authenticators={[\r\n                      anchor, \r\n                      //ledger, \r\n                      //scatter\r\n                    ]}\r\n                    chains={[chain]}\r\n                    key={chain.chainId}\r\n                >\r\n                    <AppConsumer />\r\n                </UALProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst AppConsumer = withUAL(HegeosApp);\r\n\r\nconst App = () => (\r\n  <UALWrapper available={chains} />\r\n)\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}